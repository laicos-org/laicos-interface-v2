{"version":3,"file":"static/js/2863.0ffdebf7.chunk.js","mappings":"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","sources":["sections/pricing/PricingPlanCard.tsx","pages/PricingPage.tsx"],"sourcesContent":["// @mui\nimport { Card, Button, Typography, Box, Stack, CardProps } from '@mui/material';\n// components\nimport Label from '../../components/label';\nimport Iconify from '../../components/iconify';\n// assets\nimport { PlanFreeIcon, PlanStarterIcon, PlanPremiumIcon } from '../../assets/icons';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  card: {\n    subscription: string;\n    price: number;\n    caption: string;\n    labelAction: string;\n    lists: {\n      text: string;\n      isAvailable: boolean;\n    }[];\n  };\n  index: number;\n}\n\nexport default function PricingPlanCard({ card, index, sx, ...other }: Props) {\n  const { subscription, price, caption, lists, labelAction } = card;\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n        boxShadow: (theme) => theme.customShadows.z24,\n        ...((index === 0 || index === 2) && {\n          boxShadow: 'none',\n          bgcolor: 'background.default',\n          border: (theme) => `dashed 1px ${theme.palette.divider}`,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      {index === 1 && (\n        <Label color=\"info\" sx={{ top: 16, right: 16, position: 'absolute' }}>\n          POPULAR\n        </Label>\n      )}\n\n      <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n        {subscription}\n      </Typography>\n\n      <Stack spacing={1} direction=\"row\" sx={{ my: 2 }}>\n        {(index === 1 || index === 2) && <Typography variant=\"h5\">$</Typography>}\n\n        <Typography variant=\"h2\">{price === 0 ? 'Free' : price}</Typography>\n\n        {(index === 1 || index === 2) && (\n          <Typography component=\"span\" sx={{ alignSelf: 'center', color: 'text.secondary' }}>\n            /mo\n          </Typography>\n        )}\n      </Stack>\n\n      <Typography\n        variant=\"caption\"\n        sx={{\n          color: 'primary.main',\n          textTransform: 'capitalize',\n        }}\n      >\n        {caption}\n      </Typography>\n\n      <Box sx={{ width: 80, height: 80, mt: 5 }}>\n        {(subscription === 'basic' && <PlanFreeIcon />) ||\n          (subscription === 'starter' && <PlanStarterIcon />) || <PlanPremiumIcon />}\n      </Box>\n\n      <Stack component=\"ul\" spacing={2} sx={{ p: 0, my: 5 }}>\n        {lists.map((item) => (\n          <Stack\n            key={item.text}\n            component=\"li\"\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={1}\n            sx={{\n              typography: 'body2',\n              color: item.isAvailable ? 'text.primary' : 'text.disabled',\n            }}\n          >\n            <Iconify\n              icon={item.isAvailable ? 'eva:checkmark-fill' : 'eva:close-fill'}\n              width={16}\n              sx={{\n                color: item.isAvailable ? 'primary.main' : 'inherit',\n              }}\n            />\n            <Typography variant=\"body2\">{item.text}</Typography>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Button fullWidth size=\"large\" variant=\"contained\" disabled={index === 0}>\n        {labelAction}\n      </Button>\n    </Card>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Switch, Container, Typography, Stack } from '@mui/material';\n// _mock_\nimport { _pricingPlans } from '../_mock/arrays';\n// sections\nimport { PricingPlanCard } from '../sections/pricing';\n\n// ----------------------------------------------------------------------\n\nexport default function PricingPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Pricing | Laicos</title>\n      </Helmet>\n\n      <Container\n        sx={{\n          pt: 15,\n          pb: 10,\n          minHeight: 1,\n        }}\n      >\n        <Typography variant=\"h3\" align=\"center\" paragraph>\n          Flexible plans for your\n          <br /> community&apos;s size and needs\n        </Typography>\n\n        <Typography align=\"center\" sx={{ color: 'text.secondary' }}>\n          Choose your plan and make modern online conversation magic\n        </Typography>\n\n        <Box sx={{ my: 5 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Typography variant=\"overline\" sx={{ mr: 1.5 }}>\n              MONTHLY\n            </Typography>\n\n            <Switch />\n            <Typography variant=\"overline\" sx={{ ml: 1.5 }}>\n              YEARLY (save 10%)\n            </Typography>\n          </Stack>\n\n          <Typography\n            variant=\"caption\"\n            align=\"right\"\n            sx={{ color: 'text.secondary', display: 'block' }}\n          >\n            * Plus applicable taxes\n          </Typography>\n        </Box>\n\n        <Box gap={3} display=\"grid\" gridTemplateColumns={{ md: 'repeat(3, 1fr)' }}>\n          {_pricingPlans.map((card, index) => (\n            <PricingPlanCard key={card.subscription} card={card} index={index} />\n          ))}\n        </Box>\n      </Container>\n    </>\n  );\n}\n"],"names":["PricingPlanCard","card","index","sx","other","subscription","price","caption","lists","labelAction","Card","p","boxShadow","theme","customShadows","z24","bgcolor","border","palette","divider","color","top","right","position","Typography","variant","Stack","spacing","direction","my","component","alignSelf","textTransform","Box","width","height","mt","map","item","alignItems","typography","isAvailable","icon","text","Button","fullWidth","size","disabled","PricingPage","Container","pt","pb","minHeight","align","paragraph","justifyContent","mr","Switch","ml","display","gap","gridTemplateColumns","md","_pricingPlans"],"sourceRoot":""}