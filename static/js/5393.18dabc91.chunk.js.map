{"version":3,"file":"static/js/5393.18dabc91.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","sections/_examples/mui/dialog/FormDialogs.tsx","sections/_examples/mui/dialog/AlertDialog.tsx","sections/_examples/mui/dialog/ScrollDialog.tsx","sections/_examples/mui/dialog/SimpleDialogs.tsx","sections/_examples/mui/dialog/MaxWidthDialog.tsx","sections/_examples/mui/dialog/FullScreenDialogs.tsx","sections/_examples/mui/dialog/TransitionsDialogs.tsx","pages/components/mui/MUIDialogPage.tsx","sections/_examples/Block.tsx","../node_modules/@mui/material/esm/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/esm/DialogContent/DialogContent.js","../node_modules/@mui/material/esm/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/esm/DialogContentText/DialogContentText.js","../node_modules/@mui/material/esm/DialogTitle/DialogTitle.js","../node_modules/@mui/material/esm/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/esm/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/esm/ListItemAvatar/ListItemAvatar.js"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function FormDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"warning\" onClick={handleClickOpen}>\n        Form Dialogs\n      </Button>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            type=\"email\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            label=\"Email Address\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} variant=\"contained\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"info\" variant=\"outlined\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{`Use Google's location service?`}</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from '@mui/material';\nimport { DialogProps } from '@mui/material/Dialog';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollDialog() {\n  const [open, setOpen] = useState(false);\n\n  const [scroll, setScroll] = useState<DialogProps['scroll']>('paper');\n\n  const handleClickOpen = (scrollType: DialogProps['scroll']) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\n        scroll=paper\n      </Button>\n\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\n        scroll=body\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} scroll={scroll}>\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n\n          <Button variant=\"contained\" onClick={handleClose}>\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  List,\n  Avatar,\n  Button,\n  Dialog,\n  Typography,\n  DialogTitle,\n  ListItemText,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nexport default function SimpleDialog() {\n  const [open, setOpen] = useState(false);\n\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box sx={{ textAlign: 'center' }}>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n\n      <Dialog open={open} onClose={() => handleClose(selectedValue)}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <List>\n          {emails.map((email) => (\n            <ListItemButton onClick={() => handleClose(email)} key={email}>\n              <ListItemAvatar>\n                <Avatar\n                  sx={{\n                    color: 'info.main',\n                    backgroundColor: 'info.lighter',\n                  }}\n                >\n                  <Iconify icon=\"eva:person-fill\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={email} />\n            </ListItemButton>\n          ))}\n\n          <ListItemButton autoFocus onClick={() => handleClose('addAccount')}>\n            <ListItemAvatar>\n              <Avatar>\n                <Iconify icon=\"eva:plus-fill\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Add account\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Button,\n  Dialog,\n  Select,\n  Switch,\n  MenuItem,\n  InputLabel,\n  DialogTitle,\n  FormControl,\n  DialogProps,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  SelectChangeEvent,\n  DialogContentText,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = useState(false);\n\n  const [fullWidth, setFullWidth] = useState(true);\n\n  const [maxWidth, setMaxWidth] = useState<DialogProps['maxWidth']>('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = (event: SelectChangeEvent<typeof maxWidth>) => {\n    setMaxWidth(\n      // @ts-expect-error autofill of arbitrary value is not handled.\n      event.target.value\n    );\n  };\n\n  const handleFullWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFullWidth(event.target.checked);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Max Width Dialog\n      </Button>\n\n      <Dialog open={open} maxWidth={maxWidth} onClose={handleClose} fullWidth={fullWidth}>\n        <DialogTitle>Optional sizes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <Box\n            component=\"form\"\n            noValidate\n            sx={{\n              margin: 'auto',\n              display: 'flex',\n              width: 'fit-content',\n              flexDirection: 'column',\n            }}\n          >\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                autoFocus\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                label=\"maxWidth\"\n                inputProps={{\n                  name: 'max-width',\n                  id: 'max-width',\n                }}\n              >\n                <MenuItem value={false as any}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\n              label=\"Full width\"\n              sx={{ mt: 1 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef, useState } from 'react';\n// @mui\nimport {\n  List,\n  Slide,\n  Button,\n  Dialog,\n  AppBar,\n  Toolbar,\n  Divider,\n  IconButton,\n  Typography,\n  ListItemText,\n  ListItemButton,\n} from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef(\n  (\n    props: TransitionProps & {\n      children: React.ReactElement;\n    },\n    ref: React.Ref<unknown>\n  ) => <Slide direction=\"up\" ref={ref} {...props} />\n);\n\nexport default function FullScreenDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"error\" onClick={handleClickOpen}>\n        Full Screen Dialogs\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleClose}>\n              <Iconify icon=\"eva:close-fill\" />\n            </IconButton>\n            <Typography variant=\"h6\" sx={{ flex: 1, ml: 2 }}>\n              Sound\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItemButton>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItemButton>\n\n          <Divider />\n\n          <ListItemButton>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItemButton>\n        </List>\n      </Dialog>\n    </>\n  );\n}\n","import { forwardRef, useState } from 'react';\n// @mui\nimport {\n  Slide,\n  Dialog,\n  Button,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef(\n  (\n    props: TransitionProps & {\n      children: React.ReactElement;\n    },\n    ref: React.Ref<unknown>\n  ) => <Slide direction=\"up\" ref={ref} {...props} />\n);\n\nexport default function TransitionsDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"success\" onClick={handleClickOpen}>\n        Transitions Dialogs\n      </Button>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{`Use Google's location service?`}</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"inherit\" onClick={handleClose}>\n            Disagree\n          </Button>\n\n          <Button variant=\"contained\" onClick={handleClose}>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Container } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport FormDialogs from '../../../sections/_examples/mui/dialog/FormDialogs';\nimport AlertDialog from '../../../sections/_examples/mui/dialog/AlertDialog';\nimport ScrollDialog from '../../../sections/_examples/mui/dialog/ScrollDialog';\nimport SimpleDialogs from '../../../sections/_examples/mui/dialog/SimpleDialogs';\nimport MaxWidthDialog from '../../../sections/_examples/mui/dialog/MaxWidthDialog';\nimport FullScreenDialogs from '../../../sections/_examples/mui/dialog/FullScreenDialogs';\nimport TransitionsDialogs from '../../../sections/_examples/mui/dialog/TransitionsDialogs';\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\n// ----------------------------------------------------------------------\n\nexport default function MUIDialogPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Dialog | Laicos</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Dialog\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Dialog' },\n            ]}\n            moreLink={['https://mui.com/components/dialogs']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\n          <Block title=\"Simple\" sx={style}>\n            <SimpleDialogs />\n          </Block>\n\n          <Block title=\"Alerts\" sx={style}>\n            <AlertDialog />\n          </Block>\n\n          <Block title=\"Transitions\" sx={style}>\n            <TransitionsDialogs />\n          </Block>\n\n          <Block title=\"Form\" sx={style}>\n            <FormDialogs />\n          </Block>\n\n          <Block title=\"Full Screen\" sx={style}>\n            <FullScreenDialogs />\n          </Block>\n\n          <Block title=\"Max Width Dialog\" sx={style}>\n            <MaxWidthDialog />\n          </Block>\n\n          <Block title=\"Scrolling Content Dialogs\" sx={style}>\n            <ScrollDialog />\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","// @mui\nimport { Theme, alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography, SxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype BlockProps = {\n  title?: string;\n  children: React.ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport function Block({ title, sx, children }: BlockProps) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LabelProps = {\n  title: string;\n};\n\nexport function Label({ title }: LabelProps) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n      className,\n      dividers = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","FormDialogs","useState","open","setOpen","handleClose","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","type","margin","label","DialogActions","AlertDialog","id","ScrollDialog","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","pb","dividers","ref","tabIndex","Array","join","emails","SimpleDialog","selectedValue","setSelectedValue","value","textAlign","List","email","ListItemButton","ListItemAvatar","Avatar","backgroundColor","ListItemText","primary","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","noValidate","flexDirection","FormControl","minWidth","InputLabel","htmlFor","Select","onChange","event","inputProps","MenuItem","FormControlLabel","control","Switch","checked","Transition","forwardRef","props","Slide","FullScreenDialogs","fullScreen","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","flex","ml","secondary","Divider","TransitionsDialogs","keepMounted","style","justifyContent","MUIDialogPage","pt","theme","palette","mode","Container","PATH_PAGE","my","Masonry","columns","xs","md","spacing","Block","title","children","alpha","grey","p","minHeight","Label","getDialogContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentRoot","styled","overridesResolver","ownerState","root","_extends","WebkitOverflowScrolling","overflowY","padding","borderTop","vars","divider","borderBottom","dialogTitleClasses","paddingTop","React","inProps","useThemeProps","className","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","composedClasses","DialogTitleRoot","idProp","getDialogTitleUtilityClass","DialogContext","titleId","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","marginTop","context","ListContext"],"sourceRoot":""}