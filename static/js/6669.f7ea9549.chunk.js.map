{"version":3,"file":"static/js/6669.f7ea9549.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/text-max-line/useTypography.ts","components/text-max-line/TextMaxLine.tsx","pages/components/extra/DemoTextMaxLinePage.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Variant } from '@mui/material/styles/createTypography';\n// hooks\nimport { useWidth } from '../../hooks/useResponsive';\n// theme\nimport { remToPx } from '../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nexport default function useTypography(variant: Variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont: any =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n//\nimport { TextMaxLineProps } from './types';\nimport useTypography from './useTypography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef<HTMLAnchorElement, TextMaxLineProps>(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    } as const;\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nexport default TextMaxLine;\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport Masonry from '@mui/lab/Masonry';\nimport { Box, Card, CardHeader, Container, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport TextMaxLine from '../../../components/text-max-line';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function DemoTextMaxLinePage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra Components: Text Max Line | Laicos</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"TextMaxLine\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'TextMaxLine' },\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={3} spacing={3}>\n          <Card>\n            <CardHeader title=\"1 Line\" />\n            <CardContent>\n              <TextMaxLine line={1}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"2 Line\" />\n            <CardContent>\n              <TextMaxLine>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"3 Line\" />\n            <CardContent>\n              <TextMaxLine line={3}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"4 Line\" />\n            <CardContent>\n              <TextMaxLine line={4}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"As Link\" />\n            <CardContent>\n              <TextMaxLine asLink line={3} href=\"#\" color=\"primary\" sx={{ maxWidth: 300 }}>\n                Donec posuere vulputate arcu. Fusce vulputate eleifend sapien. Phasellus magna.\n                Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Suspendisse faucibus, nunc\n                et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id\n                tortor.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Persistent\" />\n            <CardContent>\n              <TextMaxLine persistent line={3} href=\"#\" sx={{ bgcolor: 'background.neutral' }}>\n                Donec posuere vulputate arcu.\n              </TextMaxLine>\n            </CardContent>\n          </Card>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","useTypography","theme","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","remToPx","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","children","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","DemoTextMaxLinePage","pt","pb","palette","mode","PATH_PAGE","my","columns","spacing","title","maxWidth"],"sourceRoot":""}