{"version":3,"file":"static/js/9793.3d4dfc6e.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","components/table/utils.ts","components/table/useTable.ts","components/table/TableNoData.tsx","components/table/TableSkeleton.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedAction.tsx","components/table/TablePaginationCustom.tsx","sections/_examples/mui/table/BasicTable.tsx","sections/_examples/mui/table/collapsible-table/createData.ts","sections/_examples/mui/table/collapsible-table/CollapsibleTableRow.tsx","sections/_examples/mui/table/collapsible-table/index.tsx","sections/_examples/mui/table/sorting-selecting/SortingSelectingToolbar.tsx","sections/_examples/mui/table/sorting-selecting/index.tsx","sections/_examples/mui/table/GroupingFixedHeader.tsx","pages/components/mui/MUITablePage.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n//\nimport { TableProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = TableProps;\n\nexport type UseTableProps = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: string[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: UseTableProps): ReturnType {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id: string) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id: string) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected: string[] = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event: unknown, newPage: number) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }, []);\n\n  const onChangeDense = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell, Skeleton, Stack, TableRowProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function TableSkeleton({ ...other }: TableRowProps) {\n  return (\n    <TableRow {...other}>\n      <TableCell colSpan={12}>\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\n          <Skeleton\n            variant=\"rectangular\"\n            width={40}\n            height={40}\n            sx={{ borderRadius: 1, flexShrink: 0 }}\n          />\n          <Skeleton variant=\"text\" width=\"100%\" height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n        </Stack>\n      </TableCell>\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  action?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} selected\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  Switch,\n  SxProps,\n  TablePagination,\n  FormControlLabel,\n  TablePaginationProps,\n} from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  dense?: boolean;\n  onChangeDense?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 25],\n  sx,\n  ...other\n}: Props & TablePaginationProps) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","// @mui\nimport { Table, TableRow, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../components/scrollbar';\nimport { TableHeadCustom } from '../../../../components/table';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst TABLE_DATA = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst TABLE_HEAD = [\n  { id: 'dessert', label: 'Dessert (100g serving)' },\n  { id: 'calories', label: 'Calories', align: 'right' },\n  { id: 'fat', label: 'Fat (g)', align: 'right' },\n  { id: 'carbs', label: 'Carbs (g)', align: 'right' },\n  { id: 'protein', label: 'Protein (g)', align: 'right' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BasicTable() {\n  return (\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\n      <Scrollbar>\n        <Table sx={{ minWidth: 800 }}>\n          <TableHeadCustom headLabel={TABLE_HEAD} />\n\n          <TableBody>\n            {TABLE_DATA.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Scrollbar>\n    </TableContainer>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport default function createData(\n  name: string,\n  calories: number,\n  fat: number,\n  carbs: number,\n  protein: number,\n  price: number\n) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      {\n        date: '2020-01-05',\n        customerId: '11091700',\n        amount: 3,\n      },\n      {\n        date: '2020-01-02',\n        customerId: 'Anonymous',\n        amount: 1,\n      },\n    ],\n  };\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Paper,\n  Table,\n  Collapse,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Typography,\n  IconButton,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../../components/iconify';\n//\nimport createData from './createData';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  row: ReturnType<typeof createData>;\n};\n\nexport default function CollapsibleTableRow({ row }: Props) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton\n            size=\"small\"\n            color={open ? 'inherit' : 'default'}\n            onClick={() => setOpen(!open)}\n          >\n            <Iconify icon={open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'} />\n          </IconButton>\n        </TableCell>\n\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n\n        <TableCell align=\"right\">{row.calories}</TableCell>\n\n        <TableCell align=\"right\">{row.fat}</TableCell>\n\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell sx={{ py: 0 }} colSpan={6}>\n          <Collapse in={open} unmountOnExit>\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                py: 2,\n                borderRadius: 1.5,\n                ...(open && {\n                  boxShadow: (theme) => theme.customShadows.z20,\n                }),\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ m: 2, mt: 0 }}>\n                History\n              </Typography>\n\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n","// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../../components/scrollbar';\n//\nimport createData from './createData';\nimport CollapsibleTableRow from './CollapsibleTableRow';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_DATA = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\n      <Scrollbar>\n        <Table sx={{ minWidth: 800 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {TABLE_DATA.map((row) => (\n              <CollapsibleTableRow key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </Scrollbar>\n    </TableContainer>\n  );\n}\n","import { Tooltip, Typography, IconButton, Stack } from '@mui/material';\n// components\nimport Iconify from '../../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function SortingSelectingToolbar() {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 3 }}>\n      <Typography variant=\"h6\">Sorting & Selecting</Typography>\n\n      <Tooltip title=\"Filter list\">\n        <IconButton>\n          <Iconify icon=\"ic:round-filter-list\" />\n        </IconButton>\n      </Tooltip>\n    </Stack>\n  );\n}\n","import { useState, useEffect } from 'react';\n// @mui\nimport {\n  Table,\n  Tooltip,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  IconButton,\n  TableContainer,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../../components/iconify';\nimport Scrollbar from '../../../../../components/scrollbar';\nimport {\n  useTable,\n  emptyRows,\n  getComparator,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../../../../components/table';\n//\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\n\n// ----------------------------------------------------------------------\n\ntype RowDataType = {\n  name: string;\n  calories: number;\n  fat: number;\n  carbs: number;\n  protein: number;\n};\n\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst TABLE_DATA = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n];\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Dessert (100g serving)', align: 'left' },\n  { id: 'calories', label: 'Calories', align: 'center' },\n  { id: 'fat', label: 'Fat (g)', align: 'center' },\n  { id: 'carbs', label: 'Carbs (g)', align: 'center' },\n  { id: 'protein', label: 'Protein (g)', align: 'center' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function SortingSelecting() {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable({\n    defaultOrderBy: 'calories',\n  });\n\n  const [tableData, setTableData] = useState<RowDataType[]>([]);\n\n  useEffect(() => {\n    setTableData(TABLE_DATA);\n  }, []);\n\n  const dataFiltered = applyFilter({\n    inputData: tableData,\n    comparator: getComparator(order, orderBy),\n  });\n\n  const denseHeight = dense ? 34 : 54;\n\n  return (\n    <div>\n      <SortingSelectingToolbar />\n\n      <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n        <TableSelectedAction\n          dense={dense}\n          numSelected={selected.length}\n          rowCount={tableData.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              tableData.map((row) => row.name)\n            )\n          }\n          action={\n            <Tooltip title=\"Delete\">\n              <IconButton color=\"primary\">\n                <Iconify icon=\"eva:trash-2-outline\" />\n              </IconButton>\n            </Tooltip>\n          }\n        />\n\n        <Scrollbar>\n          <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\n            <TableHeadCustom\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={tableData.length}\n              numSelected={selected.length}\n              onSort={onSort}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.name)\n                )\n              }\n            />\n\n            <TableBody>\n              {dataFiltered\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow\n                    hover\n                    key={row.name}\n                    onClick={() => onSelectRow(row.name)}\n                    selected={selected.includes(row.name)}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox checked={selected.includes(row.name)} />\n                    </TableCell>\n                    <TableCell> {row.name} </TableCell>\n                    <TableCell align=\"center\">{row.calories}</TableCell>\n                    <TableCell align=\"center\">{row.fat}</TableCell>\n                    <TableCell align=\"center\">{row.carbs}</TableCell>\n                    <TableCell align=\"center\">{row.protein}</TableCell>\n                  </TableRow>\n                ))}\n\n              <TableEmptyRows\n                height={denseHeight}\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n              />\n            </TableBody>\n          </Table>\n        </Scrollbar>\n      </TableContainer>\n\n      <TablePaginationCustom\n        count={dataFiltered.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n        //\n        dense={dense}\n        onChangeDense={onChangeDense}\n      />\n    </div>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({\n  inputData,\n  comparator,\n}: {\n  inputData: RowDataType[];\n  comparator: (a: any, b: any) => number;\n}) {\n  const stabilizedThis = inputData.map((el, index) => [el, index] as const);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  return inputData;\n}\n","// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../components/scrollbar';\nimport { useTable, TablePaginationCustom } from '../../../../components/table';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name: string, code: string, population: number, size: number) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst TABLE_DATA = [\n  createData('India', 'IN', 1324171354, 3287263),\n  createData('China', 'CN', 1403500365, 9596961),\n  createData('Italy', 'IT', 60483973, 301340),\n  createData('United States', 'US', 327167434, 9833520),\n  createData('Canada', 'CA', 37602103, 9984670),\n  createData('Australia', 'AU', 25475400, 7692024),\n  createData('Germany', 'DE', 83019200, 357578),\n  createData('Ireland', 'IE', 4857000, 70273),\n  createData('Mexico', 'MX', 126577691, 1972550),\n  createData('Japan', 'JP', 126317000, 377973),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767),\n];\n\ninterface Column {\n  id: 'name' | 'code' | 'population' | 'size' | 'density';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst COLUMNS: Column[] = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function GroupingFixedHeader() {\n  const {\n    page,\n    rowsPerPage,\n    //\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable({ defaultRowsPerPage: 10 });\n\n  return (\n    <>\n      <TableContainer sx={{ overflow: 'unset' }}>\n        <Scrollbar sx={{ maxHeight: 400 }}>\n          <Table stickyHeader sx={{ minWidth: 800 }}>\n            <TableHead>\n              <TableRow>\n                <TableCell\n                  align=\"center\"\n                  colSpan={2}\n                  sx={{\n                    background: (theme) => theme.palette.background.paper,\n                  }}\n                >\n                  Country\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  colSpan={3}\n                  sx={{ background: (theme) => theme.palette.background.paper }}\n                >\n                  Details\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                {COLUMNS.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ top: 56, minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {TABLE_DATA.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {COLUMNS.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Scrollbar>\n      </TableContainer>\n\n      <TablePaginationCustom\n        count={TABLE_DATA.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Card, Container, CardHeader, Stack } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport BasicTable from '../../../sections/_examples/mui/table/BasicTable';\nimport CollapsibleTable from '../../../sections/_examples/mui/table/collapsible-table';\nimport SortingSelecting from '../../../sections/_examples/mui/table/sorting-selecting';\nimport GroupingFixedHeader from '../../../sections/_examples/mui/table/GroupingFixedHeader';\n\n// ----------------------------------------------------------------------\n\nexport default function MUITablePage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Table | Laicos</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Table\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Table' },\n            ]}\n            moreLink={['https://mui.com/components/tables']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={3}>\n          <Card>\n            <CardHeader title=\"Basic Table\" />\n            <BasicTable />\n          </Card>\n\n          <Card>\n            <SortingSelecting />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Grouping & FixedHeader\" />\n            <GroupingFixedHeader />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Collapsible Table\" />\n            <CollapsibleTable />\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","value","onChangeDense","TableNoData","isNotFound","TableRow","TableCell","colSpan","title","p","TableSkeleton","spacing","Skeleton","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","onClick","textTransform","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","rowsPerPageOptions","TablePagination","FormControlLabel","control","Switch","py","md","createData","calories","fat","carbs","protein","TABLE_DATA","TABLE_HEAD","BasicTable","TableContainer","Table","TableBody","row","price","history","date","customerId","amount","CollapsibleTableRow","open","setOpen","IconButton","size","scope","Collapse","in","unmountOnExit","Paper","boxShadow","theme","customShadows","z20","m","historyRow","round","CollapsibleTable","SortingSelectingToolbar","justifyContent","Tooltip","SortingSelecting","tableData","setTableData","useEffect","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","applyFilter","denseHeight","hover","includes","count","onPageChange","onRowsPerPageChange","code","population","density","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeader","maxHeight","stickyHeader","background","palette","paper","column","style","role","tabIndex","MUITablePage","pt","pb","mode","Container","PATH_PAGE","my","Card","CardHeader"],"sourceRoot":""}