{"version":3,"file":"static/js/920.996cba69.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","pages/components/mui/MUICheckboxPage.tsx","sections/_examples/Block.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { useState } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Checkbox, FormGroup, Container, FormControl, FormControlLabel } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/iconify';\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'] as const;\n\nconst PLACEMENTS = ['top', 'start', 'bottom', 'end'] as const;\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' },\n} as const;\n\n// ----------------------------------------------------------------------\n\nexport default function MUICheckboxPage() {\n  const [checked, setChecked] = useState([true, false]);\n\n  const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked([event.target.checked, event.target.checked]);\n  };\n\n  const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked([event.target.checked, checked[1]]);\n  };\n\n  const handleChange3 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked([checked[0], event.target.checked]);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Checkbox | Laicos</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Checkboxes\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Checkboxes' },\n            ]}\n            moreLink={['https://mui.com/components/checkboxes']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <Block title=\"Basic\" sx={style}>\n            <Checkbox />\n            <Checkbox defaultChecked />\n            <Checkbox defaultChecked indeterminate />\n            <Checkbox disabled />\n            <Checkbox disabled defaultChecked />\n            <Checkbox disabled indeterminate />\n          </Block>\n\n          <Block title=\"Size & Custom Icon\" sx={style}>\n            <FormControlLabel label=\"Normal\" control={<Checkbox defaultChecked />} />\n            <FormControlLabel label=\"Small\" control={<Checkbox defaultChecked size=\"small\" />} />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"info\"\n                  size=\"small\"\n                  icon={<Iconify icon=\"eva:heart-fill\" />}\n                  checkedIcon={<Iconify icon=\"eva:heart-fill\" />}\n                />\n              }\n              label=\"Custom icon\"\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"error\"\n                  icon={<Iconify icon=\"eva:award-fill\" />}\n                  checkedIcon={<Iconify icon=\"eva:award-fill\" />}\n                />\n              }\n              label=\"Custom icon\"\n            />\n          </Block>\n\n          <Block title=\"Placement\" sx={style}>\n            <FormControl component=\"fieldset\">\n              <FormGroup aria-label=\"position\" row>\n                {PLACEMENTS.map((placement) => (\n                  <FormControlLabel\n                    key={placement}\n                    value={placement}\n                    label={placement}\n                    labelPlacement={placement}\n                    control={<Checkbox />}\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                ))}\n              </FormGroup>\n            </FormControl>\n          </Block>\n\n          <Block title=\"Colors\">\n            <FormGroup>\n              {COLORS.map((color) => (\n                <FormControlLabel\n                  key={color}\n                  control={<Checkbox defaultChecked color={color} />}\n                  label={color}\n                  sx={{ textTransform: 'capitalize' }}\n                />\n              ))}\n\n              <FormControlLabel\n                disabled\n                control={<Checkbox defaultChecked color=\"error\" />}\n                label=\"Disabled\"\n              />\n            </FormGroup>\n\n            <FormControl component=\"fieldset\">\n              <FormGroup>\n                {COLORS.map((color) => (\n                  <FormControlLabel\n                    key={color}\n                    control={<Checkbox defaultChecked indeterminate color={color} />}\n                    label={color}\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                ))}\n\n                <FormControlLabel\n                  disabled\n                  control={<Checkbox defaultChecked indeterminate color=\"error\" />}\n                  label=\"Disabled\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Block>\n\n          <Block title=\"Indeterminate\" sx={style}>\n            <div>\n              <FormControlLabel\n                label=\"Parent\"\n                control={\n                  <Checkbox\n                    checked={checked[0] && checked[1]}\n                    indeterminate={checked[0] !== checked[1]}\n                    onChange={handleChange1}\n                  />\n                }\n              />\n              <div>\n                <FormControlLabel\n                  label=\"Child 1\"\n                  control={<Checkbox checked={checked[0]} onChange={handleChange2} />}\n                />\n                <FormControlLabel\n                  label=\"Child 2\"\n                  control={<Checkbox checked={checked[1]} onChange={handleChange3} />}\n                />\n              </div>\n            </div>\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","// @mui\nimport { Theme, alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography, SxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype BlockProps = {\n  title?: string;\n  children: React.ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport function Block({ title, sx, children }: BlockProps) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LabelProps = {\n  title: string;\n};\n\nexport function Label({ title }: LabelProps) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","COLORS","PLACEMENTS","style","justifyContent","flexWrap","m","MUICheckboxPage","useState","checked","setChecked","pt","pb","theme","palette","mode","PATH_PAGE","my","columns","xs","md","spacing","title","defaultChecked","indeterminate","label","control","size","checkedIcon","row","placement","value","labelPlacement","textTransform","onChange","event","Block","children","alpha","grey","p","minHeight","Label"],"sourceRoot":""}