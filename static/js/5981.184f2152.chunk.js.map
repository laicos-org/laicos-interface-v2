{"version":3,"file":"static/js/5981.184f2152.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.tsx","components/custom-breadcrumbs/CustomBreadcrumbs.tsx","pages/components/mui/MUISwitchPage.tsx","sections/_examples/Block.tsx"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link } from '@mui/material';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'text.primary',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} to={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './LinkItem';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n    />\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// @mui\nimport { Box, Switch, Container, FormGroup, FormControl, FormControlLabel } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\n// sections\nimport { Block } from '../../../sections/_examples/Block';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'] as const;\n\nconst PLACEMENTS = ['top', 'start', 'bottom', 'end'] as const;\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' },\n} as const;\n\n// ----------------------------------------------------------------------\n\nexport default function MUISwitchPage() {\n  return (\n    <>\n      <Helmet>\n        <title> MUI Components: Switch | Laicos</title>\n      </Helmet>\n\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Switch\"\n            links={[\n              {\n                name: 'Components',\n                href: PATH_PAGE.components,\n              },\n              { name: 'Switch' },\n            ]}\n            moreLink={['https://mui.com/components/switches']}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n          <Block title=\"Basic\" sx={style}>\n            <Switch defaultChecked />\n            <Switch />\n            <Switch disabled />\n            <Switch disabled checked />\n            <Switch defaultChecked color=\"default\" />\n          </Block>\n\n          <Block title=\"Sizes\" sx={style}>\n            <FormGroup row>\n              <FormControlLabel control={<Switch size=\"small\" />} label=\"Small\" />\n              <FormControlLabel control={<Switch />} label=\"Normal\" />\n            </FormGroup>\n          </Block>\n\n          <Block title=\"Placement\" sx={style}>\n            <FormGroup row>\n              {PLACEMENTS.map((placement) => (\n                <FormControlLabel\n                  key={placement}\n                  value={placement}\n                  label={placement}\n                  labelPlacement={placement}\n                  control={<Switch />}\n                  sx={{ textTransform: 'capitalize' }}\n                />\n              ))}\n            </FormGroup>\n          </Block>\n\n          <Block title=\"Colors\">\n            <FormControl component=\"fieldset\">\n              <FormGroup>\n                {COLORS.map((color) => (\n                  <FormControlLabel\n                    key={color}\n                    control={<Switch defaultChecked color={color} />}\n                    label={color}\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                ))}\n\n                <FormControlLabel disabled control={<Switch color=\"error\" />} label=\"Disabled\" />\n              </FormGroup>\n            </FormControl>\n          </Block>\n        </Masonry>\n      </Container>\n    </>\n  );\n}\n","// @mui\nimport { Theme, alpha } from '@mui/material/styles';\nimport { Paper, CardHeader, Box, Typography, SxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype BlockProps = {\n  title?: string;\n  children: React.ReactNode;\n  sx?: SxProps<Theme>;\n};\n\nexport function Block({ title, sx, children }: BlockProps) {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        borderRadius: 1.5,\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n      }}\n    >\n      {title && <CardHeader title={title} />}\n\n      <Box\n        sx={{\n          p: 5,\n          minHeight: 180,\n          ...sx,\n        }}\n      >\n        {children}\n      </Box>\n    </Paper>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LabelProps = {\n  title: string;\n};\n\nexport function Label({ title }: LabelProps) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n"],"names":["BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","display","alignItems","color","cursor","pointerEvents","renderContent","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","COLORS","PLACEMENTS","style","justifyContent","flexWrap","mx","MUISwitchPage","pt","pb","theme","palette","mode","PATH_PAGE","my","columns","xs","md","spacing","title","defaultChecked","checked","row","control","size","label","placement","value","labelPlacement","textTransform","Block","children","alpha","grey","p","minHeight","Label"],"sourceRoot":""}