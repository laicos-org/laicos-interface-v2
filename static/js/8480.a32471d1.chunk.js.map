{"version":3,"file":"static/js/8480.a32471d1.chunk.js","mappings":"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","sources":["components/confirm-dialog/ConfirmDialog.tsx","components/table/utils.ts","components/table/useTable.ts","components/table/TableNoData.tsx","components/table/TableSkeleton.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedAction.tsx","components/table/TablePaginationCustom.tsx","components/text-max-line/useTypography.ts","components/text-max-line/TextMaxLine.tsx","hooks/useCopyToClipboard.ts","hooks/useDoubleClick.ts","sections/@dashboard/file/FileInvitedItem.tsx","sections/@dashboard/file/portal/FileShareDialog.tsx","sections/@dashboard/file/portal/FileDetailsDrawer.tsx","sections/@dashboard/file/item/FileCard.tsx","sections/@dashboard/file/item/FileTableRow.tsx","sections/@dashboard/file/portal/FileNewFolderDialog.tsx","sections/@dashboard/file/item/FileFolderCard.tsx","sections/@dashboard/file/filter/FileFilterName.tsx","sections/@dashboard/file/filter/FileFilterButton.tsx","sections/@dashboard/file/filter/FileFilterType.tsx","sections/@dashboard/file/portal/FileActionSelected.tsx","sections/@dashboard/file/view/FileListView.tsx","sections/@dashboard/file/FilePanel.tsx","sections/@dashboard/file/view/FileGridView.tsx","sections/@dashboard/file/FileChangeViewButton.tsx"],"sourcesContent":["// @mui\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\n//\nimport { ConfirmDialogProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfirmDialog({\n  title,\n  content,\n  action,\n  open,\n  onClose,\n  ...other\n}: ConfirmDialogProps) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\n\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\n\n      <DialogActions>\n        {action}\n\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n","import { useState, useCallback } from 'react';\n//\nimport { TableProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = TableProps;\n\nexport type UseTableProps = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: string[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: UseTableProps): ReturnType {\n  const [dense, setDense] = useState(!!props?.defaultDense);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\n\n  const onSort = useCallback(\n    (id: string) => {\n      const isAsc = orderBy === id && order === 'asc';\n      if (id !== '') {\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(id);\n      }\n    },\n    [order, orderBy]\n  );\n\n  const onSelectRow = useCallback(\n    (id: string) => {\n      const selectedIndex = selected.indexOf(id);\n\n      let newSelected: string[] = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1)\n        );\n      }\n      setSelected(newSelected);\n    },\n    [selected]\n  );\n\n  const onSelectAllRows = useCallback((checked: boolean, newSelecteds: string[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }, []);\n\n  const onChangePage = useCallback((event: unknown, newPage: number) => {\n    setPage(newPage);\n  }, []);\n\n  const onChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }, []);\n\n  const onChangeDense = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  }, []);\n\n  return {\n    dense,\n    order,\n    page,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n    //\n    setPage,\n    setDense,\n    setOrder,\n    setOrderBy,\n    setSelected,\n    setRowsPerPage,\n  };\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../empty-content';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No Data\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell, Skeleton, Stack, TableRowProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function TableSkeleton({ ...other }: TableRowProps) {\n  return (\n    <TableRow {...other}>\n      <TableCell colSpan={12}>\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\n          <Skeleton\n            variant=\"rectangular\"\n            width={40}\n            height={40}\n            sx={{ borderRadius: 1, flexShrink: 0 }}\n          />\n          <Skeleton variant=\"text\" width=\"100%\" height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n          <Skeleton variant=\"text\" width={160} height={20} />\n        </Stack>\n      </TableCell>\n    </TableRow>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  action?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedAction({\n  dense,\n  action,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  if (!numSelected) {\n    return null;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        pl: 1,\n        pr: 2,\n        top: 0,\n        left: 0,\n        width: 1,\n        zIndex: 9,\n        height: 58,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} selected\n      </Typography>\n\n      {action && action}\n    </Stack>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  Switch,\n  SxProps,\n  TablePagination,\n  FormControlLabel,\n  TablePaginationProps,\n} from '@mui/material';\n//\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  dense?: boolean;\n  onChangeDense?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TablePaginationCustom({\n  dense,\n  onChangeDense,\n  rowsPerPageOptions = [5, 10, 25],\n  sx,\n  ...other\n}: Props & TablePaginationProps) {\n  return (\n    <Box sx={{ position: 'relative', ...sx }}>\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\n\n      {onChangeDense && (\n        <FormControlLabel\n          label=\"Dense\"\n          control={<Switch checked={dense} onChange={onChangeDense} />}\n          sx={{\n            pl: 2,\n            py: 1.5,\n            top: 0,\n            position: {\n              md: 'absolute',\n            },\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n","// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Variant } from '@mui/material/styles/createTypography';\n// hooks\nimport { useWidth } from '../../hooks/useResponsive';\n// theme\nimport { remToPx } from '../../theme/typography';\n\n// ----------------------------------------------------------------------\n\nexport default function useTypography(variant: Variant) {\n  const theme = useTheme();\n\n  const breakpoints = useWidth();\n\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\n\n  const hasResponsive =\n    variant === 'h1' ||\n    variant === 'h2' ||\n    variant === 'h3' ||\n    variant === 'h4' ||\n    variant === 'h5' ||\n    variant === 'h6';\n\n  const getFont: any =\n    hasResponsive && theme.typography[variant][key]\n      ? theme.typography[variant][key]\n      : theme.typography[variant];\n\n  const fontSize = remToPx(getFont.fontSize);\n\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\n\n  const { fontWeight, letterSpacing } = theme.typography[variant];\n\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\n}\n","import { forwardRef } from 'react';\n// @mui\nimport { Typography, Link } from '@mui/material';\n//\nimport { TextMaxLineProps } from './types';\nimport useTypography from './useTypography';\n\n// ----------------------------------------------------------------------\n\nconst TextMaxLine = forwardRef<HTMLAnchorElement, TextMaxLineProps>(\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\n    const { lineHeight } = useTypography(variant);\n\n    const styles = {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      display: '-webkit-box',\n      WebkitLineClamp: line,\n      WebkitBoxOrient: 'vertical',\n      ...(persistent && {\n        height: lineHeight * line,\n      }),\n      ...sx,\n    } as const;\n\n    if (asLink) {\n      return (\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n          {children}\n        </Link>\n      );\n    }\n\n    return (\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\n        {children}\n      </Typography>\n    );\n  }\n);\n\nexport default TextMaxLine;\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\ntype CopiedValue = string | null;\n\ntype CopyFn = (text: string) => Promise<boolean>;\n\ntype ReturnType = {\n  copy: CopyFn;\n  copiedText: CopiedValue;\n};\n\nfunction useCopyToClipboard(): ReturnType {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null);\n\n  const copy: CopyFn = async (text) => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported');\n      return false;\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(text);\n      return true;\n    } catch (error) {\n      console.warn('Copy failed', error);\n      setCopiedText(null);\n      return false;\n    }\n  };\n\n  return { copiedText, copy };\n}\n\nexport default useCopyToClipboard;\n","import { useCallback, useRef } from 'react';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  timeout?: number;\n  click?: (e: React.SyntheticEvent) => void;\n  doubleClick: (e: React.SyntheticEvent) => void;\n};\n\nexport default function useDoubleClick({ click, doubleClick, timeout = 250 }: Props) {\n  const clickTimeout = useRef<any>();\n\n  const clearClickTimeout = () => {\n    if (clickTimeout) {\n      clearTimeout(clickTimeout.current);\n      clickTimeout.current = null;\n    }\n  };\n\n  return useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      clearClickTimeout();\n      if (click && event.detail === 1) {\n        clickTimeout.current = setTimeout(() => {\n          click(event);\n        }, timeout);\n      }\n      if (event.detail % 2 === 0) {\n        doubleClick(event);\n      }\n    },\n    [click, doubleClick, timeout]\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Avatar,\n  Button,\n  Divider,\n  Tooltip,\n  ListItem,\n  MenuItem,\n  ListItemText,\n  ListItemAvatar,\n} from '@mui/material';\n// @types\nimport { IFileShared } from '../../../@types/file';\n// components\nimport Iconify from '../../../components/iconify';\nimport MenuPopover from '../../../components/menu-popover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  person: IFileShared;\n};\n\nexport default function FileInvitedItem({ person }: Props) {\n  const [permission, setPermission] = useState(person.permission);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangePermission = (newPermission: string) => {\n    setPermission(newPermission);\n  };\n\n  return (\n    <>\n      <ListItem disableGutters>\n        <ListItemAvatar>\n          <Avatar alt={person.name} src={person.avatar} />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={person.name}\n          secondary={\n            <Tooltip title={person.email}>\n              <span>{person.email}</span>\n            </Tooltip>\n          }\n          primaryTypographyProps={{ noWrap: true, typography: 'subtitle2' }}\n          secondaryTypographyProps={{ noWrap: true }}\n          sx={{ flexGrow: 1, pr: 1 }}\n        />\n\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n          onClick={handleOpenPopover}\n          sx={{\n            flexShrink: 0,\n            textTransform: 'unset',\n            fontWeight: 'fontWeightMedium',\n            '& .MuiButton-endIcon': {\n              ml: 0,\n            },\n            ...(openPopover && {\n              bgcolor: 'action.selected',\n            }),\n          }}\n        >\n          Can {permission}\n        </Button>\n      </ListItem>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ width: 160 }}>\n        <>\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('view');\n            }}\n            sx={{\n              ...(permission === 'view' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:eye-fill\" />\n            Can view\n          </MenuItem>\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n              handleChangePermission('edit');\n            }}\n            sx={{\n              ...(permission === 'edit' && {\n                bgcolor: 'action.selected',\n              }),\n            }}\n          >\n            <Iconify icon=\"eva:edit-fill\" />\n            Can edit\n          </MenuItem>\n\n          <Divider sx={{ borderStyle: 'dashed' }} />\n\n          <MenuItem\n            onClick={() => {\n              handleClosePopover();\n            }}\n            sx={{ color: 'error.main' }}\n          >\n            <Iconify icon=\"eva:trash-2-outline\" />\n            Remove\n          </MenuItem>\n        </>\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport {\n  List,\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogProps,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n} from '@mui/material';\n// @types\nimport { IFileShared } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\n//\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DialogProps {\n  inviteEmail?: string;\n  shared?: IFileShared[] | null;\n  onCopyLink?: VoidFunction;\n  onChangeInvite?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport default function FileShareDialog({\n  shared,\n  inviteEmail,\n  onCopyLink,\n  onChangeInvite,\n  //\n  open,\n  onClose,\n  ...other\n}: Props) {\n  const hasShared = shared && !!shared.length;\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\n      <DialogTitle> Invite </DialogTitle>\n\n      <DialogContent sx={{ overflow: 'unset' }}>\n        {onChangeInvite && (\n          <Stack direction=\"row\" spacing={1} sx={{ mb: 3 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              value={inviteEmail}\n              placeholder=\"Email\"\n              onChange={onChangeInvite}\n            />\n            <Button disabled={!inviteEmail} variant=\"contained\" sx={{ flexShrink: 0 }}>\n              Send Invite\n            </Button>\n          </Stack>\n        )}\n\n        {hasShared && (\n          <Scrollbar sx={{ maxHeight: 60 * 6 }}>\n            <List disablePadding>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          </Scrollbar>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ justifyContent: 'space-between' }}>\n        {onCopyLink && (\n          <Button startIcon={<Iconify icon=\"eva:link-2-fill\" />} onClick={onCopyLink}>\n            Copy link\n          </Button>\n        )}\n\n        {onClose && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Chip,\n  List,\n  Stack,\n  Drawer,\n  Button,\n  Divider,\n  Checkbox,\n  TextField,\n  Typography,\n  IconButton,\n  StackProps,\n  DrawerProps,\n  Autocomplete,\n} from '@mui/material';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\nimport { fDateTime } from '../../../../utils/formatTime';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport Scrollbar from '../../../../components/scrollbar';\nimport FileThumbnail, { fileFormat } from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from './FileShareDialog';\nimport FileInvitedItem from '../FileInvitedItem';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DrawerProps {\n  item: IFile;\n  favorited?: boolean;\n  //\n  onFavorite?: VoidFunction;\n  onCopyLink: VoidFunction;\n  //\n  onClose: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileDetailsDrawer({\n  item,\n  open,\n  favorited,\n  //\n  onFavorite,\n  onCopyLink,\n  onClose,\n  onDelete,\n  ...other\n}: Props) {\n  const { name, size, url, type, shared, dateModified } = item;\n\n  const hasShared = shared && !!shared.length;\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [toggleTags, setToggleTags] = useState(true);\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [tags, setTags] = useState(item.tags.slice(0, 3));\n\n  const [toggleProperties, setToggleProperties] = useState(true);\n\n  const handleToggleTags = () => {\n    setToggleTags(!toggleTags);\n  };\n\n  const handleToggleProperties = () => {\n    setToggleProperties(!toggleProperties);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Drawer\n        open={open}\n        onClose={onClose}\n        anchor=\"right\"\n        BackdropProps={{\n          invisible: true,\n        }}\n        PaperProps={{\n          sx: { width: 320 },\n        }}\n        {...other}\n      >\n        <Scrollbar sx={{ height: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"h6\"> Info </Typography>\n\n            <Checkbox\n              color=\"warning\"\n              icon={<Iconify icon=\"eva:star-outline\" />}\n              checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n              checked={favorited}\n              onChange={onFavorite}\n              sx={{ p: 0.75 }}\n            />\n          </Stack>\n\n          <Stack\n            spacing={2.5}\n            justifyContent=\"center\"\n            sx={{ p: 2.5, bgcolor: 'background.neutral' }}\n          >\n            <FileThumbnail\n              imageView\n              file={type === 'folder' ? type : url}\n              sx={{ width: 64, height: 64 }}\n              imgSx={{ borderRadius: 1 }}\n            />\n\n            <Typography variant=\"h6\" sx={{ wordBreak: 'break-all' }}>\n              {name}\n            </Typography>\n\n            <Divider sx={{ borderStyle: 'dashed' }} />\n\n            <Stack spacing={1}>\n              <Panel label=\"Tags\" toggle={toggleTags} onToggle={handleToggleTags} />\n\n              {toggleTags && (\n                <Autocomplete\n                  multiple\n                  freeSolo\n                  limitTags={2}\n                  options={item.tags.map((option) => option)}\n                  value={tags}\n                  onChange={(event, newValue) => {\n                    setTags([...tags, ...newValue.filter((option) => tags.indexOf(option) === -1)]);\n                  }}\n                  renderTags={(value: readonly string[], getTagProps) =>\n                    value.map((option: string, index: number) => (\n                      <Chip\n                        {...getTagProps({ index })}\n                        size=\"small\"\n                        variant=\"soft\"\n                        label={option}\n                        key={option}\n                      />\n                    ))\n                  }\n                  renderInput={(params) => <TextField {...params} placeholder=\"#Add a tags\" />}\n                />\n              )}\n            </Stack>\n\n            <Stack spacing={1.5}>\n              <Panel\n                label=\"Properties\"\n                toggle={toggleProperties}\n                onToggle={handleToggleProperties}\n              />\n\n              {toggleProperties && (\n                <Stack spacing={1.5}>\n                  <Row label=\"Size\" value={fData(size)} />\n\n                  <Row label=\"Modified\" value={fDateTime(dateModified)} />\n\n                  <Row label=\"Type\" value={fileFormat(type)} />\n                </Stack>\n              )}\n            </Stack>\n          </Stack>\n\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ p: 2.5 }}>\n            <Typography variant=\"subtitle2\"> File Share With </Typography>\n\n            <IconButton\n              size=\"small\"\n              color=\"success\"\n              onClick={handleOpenShare}\n              sx={{\n                p: 0,\n                width: 24,\n                height: 24,\n                color: 'common.white',\n                bgcolor: 'success.main',\n                '&:hover': {\n                  bgcolor: 'success.main',\n                },\n              }}\n            >\n              <Iconify icon=\"eva:plus-fill\" />\n            </IconButton>\n          </Stack>\n\n          {hasShared && (\n            <List disablePadding sx={{ pl: 2.5, pr: 1 }}>\n              {shared.map((person) => (\n                <FileInvitedItem key={person.id} person={person} />\n              ))}\n            </List>\n          )}\n        </Scrollbar>\n\n        <Box sx={{ p: 2.5 }}>\n          <Button\n            fullWidth\n            variant=\"soft\"\n            color=\"error\"\n            size=\"large\"\n            startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Drawer>\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={onCopyLink}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ninterface PanelProps extends StackProps {\n  label: string;\n  toggle: boolean;\n  onToggle: VoidFunction;\n}\n\nfunction Panel({ label, toggle, onToggle, ...other }: PanelProps) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" {...other}>\n      <Typography variant=\"subtitle2\"> {label} </Typography>\n\n      <IconButton size=\"small\" onClick={onToggle}>\n        <Iconify icon={toggle ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />\n      </IconButton>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype RowProps = {\n  label: string;\n  value: string;\n};\n\nfunction Row({ label, value = '' }: RowProps) {\n  return (\n    <Stack direction=\"row\" sx={{ typography: 'caption', textTransform: 'capitalize' }}>\n      <Box component=\"span\" sx={{ width: 80, color: 'text.secondary', mr: 2 }}>\n        {label}\n      </Box>\n\n      {value}\n    </Stack>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Stack,\n  Button,\n  Divider,\n  MenuItem,\n  Checkbox,\n  CardProps,\n  IconButton,\n} from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFileManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport FileThumbnail from '../../../../components/file-thumbnail';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  file: IFileManager;\n  selected?: boolean;\n  onSelect?: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileCard({ file, selected, onSelect, onDelete, sx, ...other }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [favorited, setFavorited] = useState(file.isFavorited);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(file.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <FileThumbnail file={file.type} sx={{ width: 40, height: 40 }} />\n        )}\n\n        <TextMaxLine\n          variant=\"subtitle2\"\n          persistent\n          onClick={handleOpenDetails}\n          sx={{ mt: 2, mb: 0.5 }}\n        >\n          {file.name}\n        </TextMaxLine>\n\n        <Stack\n          spacing={0.75}\n          direction=\"row\"\n          alignItems=\"center\"\n          sx={{ typography: 'caption', color: 'text.disabled', mt: 0.5 }}\n        >\n          <Box> {fData(file.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {fDateTime(file.dateModified)} </Box>\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={file}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={file.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Divider,\n  Checkbox,\n  TableRow,\n  MenuItem,\n  TableCell,\n  IconButton,\n  Typography,\n  AvatarGroup,\n} from '@mui/material';\n// hooks\nimport useDoubleClick from '../../../../hooks/useDoubleClick';\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFileManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  row: IFileManager;\n  selected: boolean;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function FileTableRow({ row, selected, onSelectRow, onDeleteRow }: Props) {\n  const { name, size, type, dateModified, shared, isFavorited } = row;\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [favorited, setFavorited] = useState(isFavorited);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleClick = useDoubleClick({\n    click: () => {\n      handleOpenDetails();\n    },\n    doubleClick: () => console.log('DOUBLE CLICK'),\n  });\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(row.url);\n  };\n\n  return (\n    <>\n      <TableRow\n        sx={{\n          borderRadius: 1,\n          '& .MuiTableCell-root': {\n            bgcolor: 'background.default',\n          },\n          ...(openDetails && {\n            '& .MuiTableCell-root': {\n              color: 'text.primary',\n              typography: 'subtitle2',\n              bgcolor: 'background.default',\n            },\n          }),\n        }}\n      >\n        <TableCell\n          padding=\"checkbox\"\n          sx={{\n            borderTopLeftRadius: 8,\n            borderBottomLeftRadius: 8,\n          }}\n        >\n          <Checkbox\n            checked={selected}\n            onDoubleClick={() => console.log('ON DOUBLE CLICK')}\n            onClick={onSelectRow}\n          />\n        </TableCell>\n\n        <TableCell onClick={handleClick}>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <FileThumbnail file={type} />\n\n            <Typography noWrap variant=\"inherit\" sx={{ maxWidth: 360, cursor: 'pointer' }}>\n              {name}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fData(size)}\n        </TableCell>\n\n        <TableCell\n          align=\"center\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {type}\n        </TableCell>\n\n        <TableCell\n          align=\"left\"\n          onClick={handleClick}\n          sx={{ color: 'text.secondary', whiteSpace: 'nowrap' }}\n        >\n          {fDate(dateModified)}\n        </TableCell>\n\n        <TableCell align=\"right\" onClick={handleClick}>\n          <AvatarGroup\n            max={4}\n            sx={{\n              '& .MuiAvatarGroup-avatar': {\n                width: 24,\n                height: 24,\n                '&:first-of-type': {\n                  fontSize: 12,\n                },\n              },\n            }}\n          >\n            {shared &&\n              shared.map((person) => (\n                <Avatar key={person.id} alt={person.name} src={person.avatar} />\n              ))}\n          </AvatarGroup>\n        </TableCell>\n\n        <TableCell\n          align=\"right\"\n          sx={{\n            whiteSpace: 'nowrap',\n            borderTopRightRadius: 8,\n            borderBottomRightRadius: 8,\n          }}\n        >\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={row}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={onDeleteRow}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useEffect, useState, useCallback } from 'react';\n// @mui\nimport {\n  Stack,\n  Dialog,\n  Button,\n  TextField,\n  DialogProps,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { Upload } from '../../../../components/upload';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends DialogProps {\n  title?: string;\n  //\n  onCreate?: VoidFunction;\n  onUpdate?: VoidFunction;\n  //\n  folderName?: string;\n  onChangeFolderName?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //\n  open: boolean;\n  onClose: VoidFunction;\n}\n\nexport default function FileNewFolderDialog({\n  title = 'Upload Files',\n  open,\n  onClose,\n  //\n  onCreate,\n  onUpdate,\n  //\n  folderName,\n  onChangeFolderName,\n  ...other\n}: Props) {\n  const [files, setFiles] = useState<(File | string)[]>([]);\n\n  useEffect(() => {\n    if (!open) {\n      setFiles([]);\n    }\n  }, [open]);\n\n  const handleDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const newFiles = acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n\n      setFiles([...files, ...newFiles]);\n    },\n    [files]\n  );\n\n  const handleUpload = () => {\n    onClose();\n    console.log('ON UPLOAD');\n  };\n\n  const handleRemoveFile = (inputFile: File | string) => {\n    const filtered = files.filter((file) => file !== inputFile);\n    setFiles(filtered);\n  };\n\n  const handleRemoveAllFiles = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={onClose} {...other}>\n      <DialogTitle sx={{ p: (theme) => theme.spacing(3, 3, 2, 3) }}> {title} </DialogTitle>\n\n      <DialogContent dividers sx={{ pt: 1, pb: 0, border: 'none' }}>\n        {(onCreate || onUpdate) && (\n          <TextField\n            fullWidth\n            label=\"Folder name\"\n            value={folderName}\n            onChange={onChangeFolderName}\n            sx={{ mb: 3 }}\n          />\n        )}\n\n        <Upload multiple files={files} onDrop={handleDrop} onRemove={handleRemoveFile} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\n          onClick={handleUpload}\n        >\n          Upload\n        </Button>\n\n        {!!files.length && (\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleRemoveAllFiles}>\n            Remove all\n          </Button>\n        )}\n\n        {(onCreate || onUpdate) && (\n          <Stack direction=\"row\" justifyContent=\"flex-end\" flexGrow={1}>\n            <Button variant=\"soft\" onClick={onCreate || onUpdate}>\n              {onUpdate ? 'Save' : 'Create'}\n            </Button>\n          </Stack>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Stack,\n  Button,\n  Divider,\n  MenuItem,\n  Checkbox,\n  CardProps,\n  IconButton,\n} from '@mui/material';\n// hooks\nimport useCopyToClipboard from '../../../../hooks/useCopyToClipboard';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\n// @types\nimport { IFolderManager } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport TextMaxLine from '../../../../components/text-max-line';\nimport { useSnackbar } from '../../../../components/snackbar';\nimport ConfirmDialog from '../../../../components/confirm-dialog';\n//\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileDetailsDrawer from '../portal/FileDetailsDrawer';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  folder: IFolderManager;\n  selected?: boolean;\n  onSelect?: VoidFunction;\n  onDelete: VoidFunction;\n}\n\nexport default function FileFolderCard({\n  folder,\n  selected,\n  onSelect,\n  onDelete,\n  sx,\n  ...other\n}: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { copy } = useCopyToClipboard();\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [showCheckbox, setShowCheckbox] = useState(false);\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [folderName, setFolderName] = useState(folder.name);\n\n  const [openEditFolder, setOpenEditFolder] = useState(false);\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const [favorited, setFavorited] = useState(folder.isFavorited);\n\n  const handleFavorite = () => {\n    setFavorited(!favorited);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleShowCheckbox = () => {\n    setShowCheckbox(true);\n  };\n\n  const handleHideCheckbox = () => {\n    setShowCheckbox(false);\n  };\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleOpenEditFolder = () => {\n    setOpenEditFolder(true);\n  };\n\n  const handleCloseEditFolder = () => {\n    setOpenEditFolder(false);\n  };\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  const handleCopy = () => {\n    enqueueSnackbar('Copied!');\n    copy(folder.url);\n  };\n\n  return (\n    <>\n      <Card\n        onMouseEnter={handleShowCheckbox}\n        onMouseLeave={handleHideCheckbox}\n        sx={{\n          p: 2.5,\n          width: 1,\n          maxWidth: 222,\n          boxShadow: 0,\n          bgcolor: 'background.default',\n          border: (theme) => `solid 1px ${theme.palette.divider}`,\n          ...((showCheckbox || selected) && {\n            borderColor: 'transparent',\n            bgcolor: 'background.paper',\n            boxShadow: (theme) => theme.customShadows.z20,\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\n          <Checkbox\n            color=\"warning\"\n            icon={<Iconify icon=\"eva:star-outline\" />}\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\n            checked={favorited}\n            onChange={handleFavorite}\n            sx={{ p: 0.75 }}\n          />\n\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </Stack>\n\n        {(showCheckbox || selected) && onSelect ? (\n          <Checkbox\n            checked={selected}\n            onClick={onSelect}\n            icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n            checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          />\n        ) : (\n          <Box\n            component=\"img\"\n            src=\"/assets/icons/files/ic_folder.svg\"\n            sx={{ width: 40, height: 40 }}\n          />\n        )}\n\n        <TextMaxLine variant=\"h6\" onClick={handleOpenDetails} sx={{ mt: 1, mb: 0.5 }}>\n          {folder.name}\n        </TextMaxLine>\n\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={0.75}\n          sx={{ typography: 'caption', color: 'text.disabled' }}\n        >\n          <Box> {fData(folder.size)} </Box>\n\n          <Box sx={{ width: 2, height: 2, borderRadius: '50%', bgcolor: 'currentColor' }} />\n\n          <Box> {folder.totalFiles} files </Box>\n        </Stack>\n      </Card>\n\n      <MenuPopover\n        open={openPopover}\n        onClose={handleClosePopover}\n        arrow=\"right-top\"\n        sx={{ width: 160 }}\n      >\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleCopy();\n          }}\n        >\n          <Iconify icon=\"eva:link-2-fill\" />\n          Copy Link\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenShare();\n          }}\n        >\n          <Iconify icon=\"eva:share-fill\" />\n          Share\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            handleClosePopover();\n            handleOpenEditFolder();\n          }}\n        >\n          <Iconify icon=\"eva:edit-fill\" />\n          Edit\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem\n          onClick={() => {\n            handleOpenConfirm();\n            handleClosePopover();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <Iconify icon=\"eva:trash-2-outline\" />\n          Delete\n        </MenuItem>\n      </MenuPopover>\n\n      <FileDetailsDrawer\n        item={folder}\n        favorited={favorited}\n        onFavorite={handleFavorite}\n        onCopyLink={handleCopy}\n        open={openDetails}\n        onClose={handleCloseDetails}\n        onDelete={() => {\n          handleCloseDetails();\n          onDelete();\n        }}\n      />\n\n      <FileShareDialog\n        open={openShare}\n        shared={folder.shared}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onCopyLink={handleCopy}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog\n        open={openEditFolder}\n        onClose={handleCloseEditFolder}\n        title=\"Edit Folder\"\n        onUpdate={() => {\n          handleCloseEditFolder();\n          setFolderName(folderName);\n          console.log('UPDATE FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","// @mui\nimport { TextField, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterName: string;\n  onFilterName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport default function FileFilterName({ filterName, onFilterName }: Props) {\n  return (\n    <TextField\n      size=\"small\"\n      value={filterName}\n      onChange={onFilterName}\n      placeholder=\"Search...\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n","// @mui\nimport { Box, Button, ButtonProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ButtonProps {\n  children?: React.ReactNode;\n  isSelected: boolean;\n}\n\nexport default function FileFilterButton({ children, isSelected, ...other }: Props) {\n  return (\n    <Button\n      variant=\"soft\"\n      color=\"inherit\"\n      sx={{\n        textTransform: 'unset',\n        color: 'text.secondary',\n        width: { xs: 1, md: 'auto' },\n        justifyContent: 'flex-start',\n        fontWeight: 'fontWeightMedium',\n        ...(isSelected && {\n          color: 'text.primary',\n        }),\n      }}\n      {...other}\n    >\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Stack, Button, Typography, CardActionArea } from '@mui/material';\n// components\nimport Label from '../../../../components/label';\nimport Iconify from '../../../../components/iconify';\nimport MenuPopover from '../../../../components/menu-popover';\nimport FileThumbnail from '../../../../components/file-thumbnail';\n//\nimport FileFilterButton from './FileFilterButton';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  filterType: string[];\n  optionsType: string[];\n  onReset: VoidFunction;\n  onFilterType: (type: string) => void;\n};\n\nexport default function FileFilterType({ optionsType, filterType, onFilterType, onReset }: Props) {\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  const isSelected = !!filterType.length;\n\n  const renderLabel = filterType.length ? filterType.slice(0, 2).join(',') : 'All type';\n\n  return (\n    <>\n      <FileFilterButton\n        isSelected={isSelected}\n        endIcon={<Iconify icon={openPopover ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n        onClick={handleOpenPopover}\n      >\n        {renderLabel}\n        {filterType.length > 2 && (\n          <Label color=\"info\" sx={{ ml: 1 }}>\n            +{filterType.length - 2}\n          </Label>\n        )}\n      </FileFilterButton>\n\n      <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ p: 2.5 }}>\n        <Stack spacing={2.5}>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{ xs: 'repeat(2, 1fr)', sm: 'repeat(4, 1fr)' }}\n            gap={1}\n          >\n            {optionsType.map((type) => {\n              const selected = filterType.includes(type);\n\n              return (\n                <CardActionArea\n                  key={type}\n                  onClick={() => onFilterType(type)}\n                  sx={{\n                    p: 1,\n                    borderRadius: 1,\n                    cursor: 'pointer',\n                    color: 'text.secondary',\n                    border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.12)}`,\n                    ...(selected && {\n                      color: 'text.primary',\n                      bgcolor: 'action.selected',\n                    }),\n                  }}\n                >\n                  <Stack spacing={0.5} direction=\"row\" alignItems=\"center\">\n                    <FileThumbnail file={type} />\n\n                    <Typography variant=\"body2\">{type}</Typography>\n                  </Stack>\n                </CardActionArea>\n              );\n            })}\n          </Box>\n\n          <Stack spacing={1} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n            <Button variant=\"outlined\" color=\"inherit\" onClick={onReset}>\n              Clear\n            </Button>\n\n            <Button variant=\"contained\" onClick={handleClosePopover}>\n              Apply\n            </Button>\n          </Stack>\n        </Stack>\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport { styled, SxProps, Theme } from '@mui/material/styles';\nimport { Box, Typography, Checkbox, Portal } from '@mui/material';\n// components\nimport Iconify from '../../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  right: 24,\n  zIndex: 9,\n  bottom: 40,\n  display: 'flex',\n  position: 'fixed',\n  alignItems: 'center',\n  boxShadow: theme.customShadows.z20,\n  padding: theme.spacing(1.5, 1, 1.5, 2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.text.primary,\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  action?: React.ReactNode;\n  numSelected: number;\n  rowCount: number;\n  selected?: string[];\n  onSelectAllItems: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function FileActionSelected({\n  action,\n  selected,\n  rowCount,\n  numSelected,\n  onSelectAllItems,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Portal>\n      <StyledRoot sx={sx} {...other}>\n        <Checkbox\n          indeterminate={numSelected > 0 && numSelected < rowCount}\n          checked={rowCount > 0 && numSelected === rowCount}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSelectAllItems(event.target.checked)\n          }\n          icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\n          checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\n          indeterminateIcon={<Iconify icon=\"eva:minus-circle-fill\" />}\n        />\n\n        {selected && (\n          <Typography\n            variant=\"subtitle2\"\n            sx={{\n              mr: 2,\n              color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n            }}\n          >\n            {selected.length}\n            <Box component=\"span\" sx={{ ml: 0.5 }}>\n              items selected\n            </Box>\n          </Typography>\n        )}\n\n        {action && action}\n      </StyledRoot>\n    </Portal>\n  );\n}\n","// @mui\nimport { Table, Tooltip, TableBody, IconButton, TableContainer, Box } from '@mui/material';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport {\n  emptyRows,\n  TableProps,\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedAction,\n  TablePaginationCustom,\n} from '../../../../components/table';\n//\nimport FileTableRow from '../item/FileTableRow';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', align: 'left' },\n  { id: 'size', label: 'Size', align: 'left', width: 120 },\n  { id: 'type', label: 'Type', align: 'center', width: 120 },\n  { id: 'dateModified', label: 'Modified', align: 'left', width: 160 },\n  { id: 'shared', label: 'Shared', align: 'right', width: 100 },\n  { id: '' },\n];\n\ntype Props = {\n  table: TableProps;\n  tableData: IFile[];\n  isNotFound: boolean;\n  dataFiltered: IFile[];\n  onOpenConfirm: VoidFunction;\n  onDeleteRow: (id: string) => void;\n};\n\nexport default function FileListView({\n  table,\n  tableData,\n  isNotFound,\n  onDeleteRow,\n  dataFiltered,\n  onOpenConfirm,\n}: Props) {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangeDense,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = table;\n\n  const denseHeight = dense ? 52 : 72;\n\n  return (\n    <>\n      <Box sx={{ px: 1, position: 'relative', borderRadius: 1.5, bgcolor: 'background.neutral' }}>\n        <TableSelectedAction\n          dense={dense}\n          numSelected={selected.length}\n          rowCount={tableData.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              tableData.map((row) => row.id)\n            )\n          }\n          action={\n            <>\n              <Tooltip title=\"Share\">\n                <IconButton color=\"primary\">\n                  <Iconify icon=\"eva:share-fill\" />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Delete\">\n                <IconButton color=\"primary\" onClick={onOpenConfirm}>\n                  <Iconify icon=\"eva:trash-2-outline\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          }\n          sx={{\n            pl: 1,\n            pr: 2,\n            top: 8,\n            left: 8,\n            right: 8,\n            width: 'auto',\n            borderRadius: 1,\n          }}\n        />\n\n        <TableContainer>\n          <Table\n            size={dense ? 'small' : 'medium'}\n            sx={{\n              minWidth: 960,\n              borderCollapse: 'separate',\n              borderSpacing: '0 8px',\n              '& .MuiTableCell-head': {\n                boxShadow: 'none !important',\n              },\n            }}\n          >\n            <TableHeadCustom\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={tableData.length}\n              numSelected={selected.length}\n              onSort={onSort}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  tableData.map((row) => row.id)\n                )\n              }\n              sx={{\n                '& .MuiTableCell-head': {\n                  bgcolor: 'transparent',\n                },\n              }}\n            />\n\n            <TableBody>\n              {dataFiltered\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <FileTableRow\n                    key={row.id}\n                    row={row}\n                    selected={selected.includes(row.id)}\n                    onSelectRow={() => onSelectRow(row.id)}\n                    onDeleteRow={() => onDeleteRow(row.id)}\n                  />\n                ))}\n\n              <TableEmptyRows\n                height={denseHeight}\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n              />\n\n              <TableNoData isNotFound={isNotFound} />\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      <TablePaginationCustom\n        count={dataFiltered.length}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onPageChange={onChangePage}\n        onRowsPerPageChange={onChangeRowsPerPage}\n        //\n        dense={dense}\n        onChangeDense={onChangeDense}\n        sx={{\n          '& .MuiTablePagination-root': { borderTop: 'none' },\n          '& .MuiFormControlLabel-root': { px: 0 },\n        }}\n      />\n    </>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Button, Typography, StackProps, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  title: string;\n  subTitle?: string;\n  link?: string;\n  onOpen?: VoidFunction;\n  collapse?: boolean;\n  onCollapse?: VoidFunction;\n}\n\nexport default function FilePanel({\n  title,\n  subTitle,\n  link,\n  onOpen,\n  collapse,\n  onCollapse,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 3, ...sx }} {...other}>\n      <Stack flexGrow={1}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} flexGrow={1}>\n          <Typography variant=\"h6\"> {title} </Typography>\n\n          <IconButton\n            size=\"small\"\n            color=\"success\"\n            onClick={onOpen}\n            sx={{\n              p: 0,\n              width: 24,\n              height: 24,\n              color: 'common.white',\n              bgcolor: 'success.main',\n              '&:hover': {\n                bgcolor: 'success.main',\n              },\n            }}\n          >\n            <Iconify icon=\"eva:plus-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.disabled', mt: 0.5 }}>\n          {subTitle}\n        </Typography>\n      </Stack>\n\n      {link && (\n        <Button\n          to={link}\n          component={RouterLink}\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon=\"eva:chevron-right-fill\" />}\n        >\n          View All\n        </Button>\n      )}\n\n      {onCollapse && (\n        <IconButton onClick={onCollapse}>\n          <Iconify icon={collapse ? 'eva:chevron-down-fill' : 'eva:chevron-up-fill'} />\n        </IconButton>\n      )}\n    </Stack>\n  );\n}\n","import { useState, useRef } from 'react';\n// @mui\nimport { Collapse, Box, Divider, Button } from '@mui/material';\n// @types\nimport { IFile } from '../../../../@types/file';\n// components\nimport Iconify from '../../../../components/iconify';\nimport { TableProps } from '../../../../components/table';\n//\nimport FilePanel from '../FilePanel';\nimport FileCard from '../item/FileCard';\nimport FileFolderCard from '../item/FileFolderCard';\nimport FileShareDialog from '../portal/FileShareDialog';\nimport FileActionSelected from '../portal/FileActionSelected';\nimport FileNewFolderDialog from '../portal/FileNewFolderDialog';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  table: TableProps;\n  data: IFile[];\n  dataFiltered: IFile[];\n  onOpenConfirm: VoidFunction;\n  onDeleteItem: (id: string) => void;\n};\n\nexport default function FileGridView({\n  table,\n  data,\n  dataFiltered,\n  onDeleteItem,\n  onOpenConfirm,\n}: Props) {\n  const { selected, onSelectRow: onSelectItem, onSelectAllRows: onSelectAllItems } = table;\n\n  const containerRef = useRef(null);\n\n  const [folderName, setFolderName] = useState('');\n\n  const [inviteEmail, setInviteEmail] = useState('');\n\n  const [openShare, setOpenShare] = useState(false);\n\n  const [collapseFiles, setCollapseFiles] = useState(false);\n\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n\n  const [openUploadFile, setOpenUploadFile] = useState(false);\n\n  const [collapseFolders, setCollapseFolders] = useState(false);\n\n  const handleOpenShare = () => {\n    setOpenShare(true);\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n  };\n\n  const handleOpenNewFolder = () => {\n    setOpenNewFolder(true);\n  };\n\n  const handleCloseNewFolder = () => {\n    setOpenNewFolder(false);\n  };\n\n  const handleOpenUploadFile = () => {\n    setOpenUploadFile(true);\n  };\n\n  const handleCloseUploadFile = () => {\n    setOpenUploadFile(false);\n  };\n\n  const handleChangeInvite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInviteEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Box ref={containerRef}>\n        <FilePanel\n          title=\"Folders\"\n          subTitle={`${data.filter((item) => item.type === 'folder').length} folders`}\n          onOpen={handleOpenNewFolder}\n          collapse={collapseFolders}\n          onCollapse={() => setCollapseFolders(!collapseFolders)}\n        />\n\n        <Collapse in={!collapseFolders} unmountOnExit>\n          <Box\n            gap={3}\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n          >\n            {dataFiltered\n              .filter((i) => i.type === 'folder')\n              .map((folder) => (\n                <FileFolderCard\n                  key={folder.id}\n                  folder={folder}\n                  selected={selected.includes(folder.id)}\n                  onSelect={() => onSelectItem(folder.id)}\n                  onDelete={() => onDeleteItem(folder.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        <Divider sx={{ my: 5, borderStyle: 'dashed' }} />\n\n        <FilePanel\n          title=\"Files\"\n          subTitle={`${data.filter((item) => item.type !== 'folder').length} files`}\n          onOpen={handleOpenUploadFile}\n          collapse={collapseFiles}\n          onCollapse={() => setCollapseFiles(!collapseFiles)}\n        />\n\n        <Collapse in={!collapseFiles} unmountOnExit>\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={{\n              xs: 'repeat(1, 1fr)',\n              sm: 'repeat(2, 1fr)',\n              md: 'repeat(3, 1fr)',\n              lg: 'repeat(4, 1fr)',\n            }}\n            gap={3}\n          >\n            {dataFiltered\n              .filter((i) => i.type !== 'folder')\n              .map((file) => (\n                <FileCard\n                  key={file.id}\n                  file={file}\n                  selected={selected.includes(file.id)}\n                  onSelect={() => onSelectItem(file.id)}\n                  onDelete={() => onDeleteItem(file.id)}\n                  sx={{ maxWidth: 'auto' }}\n                />\n              ))}\n          </Box>\n        </Collapse>\n\n        {!!selected?.length && (\n          <FileActionSelected\n            numSelected={selected.length}\n            rowCount={data.length}\n            selected={selected}\n            onSelectAllItems={(checked) =>\n              onSelectAllItems(\n                checked,\n                data.map((row) => row.id)\n              )\n            }\n            action={\n              <>\n                <Button\n                  size=\"small\"\n                  color=\"error\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\n                  onClick={onOpenConfirm}\n                  sx={{ mr: 1 }}\n                >\n                  Delete\n                </Button>\n\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  startIcon={<Iconify icon=\"eva:share-fill\" />}\n                  onClick={handleOpenShare}\n                  sx={{\n                    color: (theme) =>\n                      theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                    bgcolor: (theme) =>\n                      theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    '&:hover': {\n                      color: (theme) =>\n                        theme.palette.mode === 'light' ? 'grey.800' : 'common.white',\n                      bgcolor: (theme) =>\n                        theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n                    },\n                  }}\n                >\n                  Share\n                </Button>\n              </>\n            }\n          />\n        )}\n      </Box>\n\n      <FileShareDialog\n        open={openShare}\n        inviteEmail={inviteEmail}\n        onChangeInvite={handleChangeInvite}\n        onClose={() => {\n          handleCloseShare();\n          setInviteEmail('');\n        }}\n      />\n\n      <FileNewFolderDialog open={openUploadFile} onClose={handleCloseUploadFile} />\n\n      <FileNewFolderDialog\n        open={openNewFolder}\n        onClose={handleCloseNewFolder}\n        title=\"New Folder\"\n        onCreate={() => {\n          handleCloseNewFolder();\n          setFolderName('');\n          console.log('CREATE NEW FOLDER', folderName);\n        }}\n        folderName={folderName}\n        onChangeFolderName={(event) => setFolderName(event.target.value)}\n      />\n    </>\n  );\n}\n","// @mui\nimport { ToggleButton, ToggleButtonGroup, ToggleButtonGroupProps } from '@mui/material';\n// components\nimport Iconify from '../../../components/iconify';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ToggleButtonGroupProps {\n  value: string;\n  onChange: (event: React.MouseEvent<HTMLElement>, newView: string | null) => void;\n}\n\nexport default function FileChangeViewButton({ value, onChange, ...other }: Props) {\n  return (\n    <ToggleButtonGroup\n      size=\"small\"\n      color=\"primary\"\n      value={value}\n      exclusive\n      onChange={onChange}\n      {...other}\n    >\n      <ToggleButton value=\"list\">\n        <Iconify icon=\"eva:list-fill\" />\n      </ToggleButton>\n\n      <ToggleButton value=\"grid\">\n        <Iconify icon=\"eva:grid-fill\" />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"],"names":["ConfirmDialog","title","content","action","open","onClose","other","Dialog","fullWidth","maxWidth","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","setPage","defaultRowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","onChangeDense","TableNoData","isNotFound","TableRow","TableCell","colSpan","height","p","TableSkeleton","Stack","spacing","direction","alignItems","Skeleton","width","borderRadius","flexShrink","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","textTransform","label","Box","TableSelectedAction","pl","pr","top","left","zIndex","bgcolor","Typography","ml","flexGrow","TablePaginationCustom","rowsPerPageOptions","TablePagination","component","FormControlLabel","control","Switch","py","md","useTypography","theme","useTheme","breakpoints","useWidth","key","up","getFont","fontSize","remToPx","lineHeight","Number","fontWeight","letterSpacing","forwardRef","ref","asLink","line","persistent","children","styles","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","Link","copiedText","setCopiedText","copy","text","navigator","clipboard","console","warn","writeText","useDoubleClick","click","doubleClick","timeout","clickTimeout","useRef","clearTimeout","current","detail","setTimeout","FileInvitedItem","person","permission","setPermission","openPopover","setOpenPopover","handleClosePopover","handleChangePermission","newPermission","ListItem","disableGutters","ListItemAvatar","Avatar","alt","name","src","avatar","ListItemText","primary","secondary","Tooltip","email","primaryTypographyProps","noWrap","secondaryTypographyProps","size","endIcon","icon","currentTarget","MenuItem","Divider","borderStyle","FileShareDialog","shared","inviteEmail","onCopyLink","onChangeInvite","hasShared","mb","TextField","placeholder","disabled","maxHeight","List","disablePadding","justifyContent","startIcon","FileDetailsDrawer","item","favorited","onFavorite","onDelete","url","type","dateModified","openShare","setOpenShare","toggleTags","setToggleTags","setInviteEmail","tags","setTags","toggleProperties","setToggleProperties","Drawer","anchor","BackdropProps","invisible","PaperProps","checkedIcon","imageView","file","imgSx","wordBreak","Panel","toggle","onToggle","Autocomplete","multiple","freeSolo","limitTags","options","option","newValue","filter","renderTags","getTagProps","index","Chip","renderInput","params","Row","fData","fDateTime","fileFormat","IconButton","mr","FileCard","onSelect","enqueueSnackbar","useSnackbar","useCopyToClipboard","showCheckbox","setShowCheckbox","openConfirm","setOpenConfirm","openDetails","setOpenDetails","isFavorited","setFavorited","handleFavorite","handleCloseDetails","handleCopy","Card","onMouseEnter","onMouseLeave","boxShadow","palette","divider","borderColor","customShadows","z20","mt","right","arrow","FileTableRow","row","onDeleteRow","handleClick","log","borderTopLeftRadius","borderBottomLeftRadius","onDoubleClick","cursor","fDate","AvatarGroup","borderTopRightRadius","borderBottomRightRadius","FileNewFolderDialog","onCreate","onUpdate","folderName","onChangeFolderName","files","setFiles","useEffect","handleDrop","acceptedFiles","newFiles","Object","assign","preview","URL","createObjectURL","dividers","pt","onDrop","onRemove","inputFile","filtered","FileFolderCard","folder","setFolderName","openEditFolder","setOpenEditFolder","handleCloseEditFolder","totalFiles","FileFilterName","filterName","onFilterName","InputProps","startAdornment","InputAdornment","FileFilterButton","isSelected","xs","FileFilterType","optionsType","filterType","onFilterType","onReset","renderLabel","join","gridTemplateColumns","sm","gap","includes","CardActionArea","alpha","grey","StyledRoot","styled","bottom","shape","backgroundColor","FileActionSelected","onSelectAllItems","Portal","indeterminateIcon","mode","TABLE_HEAD","FileListView","table","tableData","dataFiltered","onOpenConfirm","denseHeight","px","TableContainer","Table","borderCollapse","borderSpacing","TableBody","count","onPageChange","onRowsPerPageChange","borderTop","FilePanel","subTitle","link","onOpen","collapse","onCollapse","to","RouterLink","FileGridView","data","onDeleteItem","onSelectItem","containerRef","collapseFiles","setCollapseFiles","openNewFolder","setOpenNewFolder","openUploadFile","setOpenUploadFile","collapseFolders","setCollapseFolders","handleCloseNewFolder","Collapse","in","unmountOnExit","lg","i","my","FileChangeViewButton","ToggleButtonGroup","exclusive","ToggleButton"],"sourceRoot":""}