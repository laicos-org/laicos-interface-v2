{"version":3,"file":"static/js/6665.8e20b438.chunk.js","mappings":"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","sources":["components/badge-status/styles.tsx","components/badge-status/BadgeStatus.tsx","sections/home/HomeHero.tsx","sections/home/HomeLaicos.tsx","sections/home/HomeDarkMode.tsx","sections/home/HomeLookingFor.tsx","sections/home/HomeForDesigner.tsx","sections/home/HomeColorPresets.tsx","sections/home/HomePricingPlans.tsx","sections/home/HomeCleanInterfaces.tsx","sections/home/HomeHugePackElements.tsx","pages/HomePage.tsx"],"sourcesContent":["// @mui\nimport { Theme, styled } from '@mui/material/styles';\n//\nimport { BadgeStatusValue, BadgeSizeValue } from './types';\n\n// ----------------------------------------------------------------------\n\nexport const StyledBadgeStatus = styled('span')(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      size: BadgeSizeValue;\n      status: BadgeStatusValue;\n    };\n  }) => {\n    const { status, size } = ownerState;\n\n    return {\n      width: 10,\n      height: 10,\n      display: 'flex',\n      borderRadius: '50%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:before, &:after': {\n        content: \"''\",\n        borderRadius: 1,\n        backgroundColor: theme.palette.common.white,\n      },\n\n      ...(size === 'small' && { width: 8, height: 8 }),\n\n      ...(size === 'large' && { width: 12, height: 12 }),\n\n      ...(status === 'offline' && { backgroundColor: 'transparent' }),\n\n      ...(status === 'away' && {\n        backgroundColor: theme.palette.warning.main,\n        '&:before': {\n          width: 2,\n          height: 4,\n          transform: 'translateX(1px) translateY(-1px)',\n        },\n        '&:after': {\n          width: 2,\n          height: 4,\n          transform: 'translateY(1px) rotate(125deg)',\n        },\n      }),\n\n      ...(status === 'busy' && {\n        backgroundColor: theme.palette.error.main,\n        '&:before': { width: 6, height: 2 },\n      }),\n\n      ...(status === 'online' && {\n        backgroundColor: theme.palette.success.main,\n      }),\n\n      ...(status === 'invisible' && {\n        backgroundColor: theme.palette.text.disabled,\n        '&:before': {\n          width: 6,\n          height: 6,\n          borderRadius: '50%',\n        },\n      }),\n\n      ...(status === 'unread' && {\n        backgroundColor: theme.palette.info.main,\n      }),\n    };\n  }\n);\n","// @mui\nimport { useTheme } from '@mui/material/styles';\n//\nimport { StyledBadgeStatus } from './styles';\nimport { BadgeStatusProps } from './types';\n\n// ----------------------------------------------------------------------\n\nexport default function BadgeStatus({ size = 'medium', status = 'offline', sx }: BadgeStatusProps) {\n  const theme = useTheme();\n\n  return <StyledBadgeStatus ownerState={{ status, size }} sx={sx} theme={theme} />;\n}\n","import { m, useScroll } from 'framer-motion';\nimport { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled, alpha, useTheme } from '@mui/material/styles';\nimport { Button, Box, Link, Container, Typography, Stack, Grid } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD, PATH_FIGMA_PREVIEW, PATH_FREE_VERSION } from '../../routes/paths';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// utils\nimport { textGradient, bgGradient } from '../../utils/cssStyles';\n// config\nimport { HEADER } from '../../config-global';\n// components\nimport SvgColor from '../../components/svg-color';\nimport Iconify from '../../components/iconify';\nimport { MotionContainer, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  position: 'relative',\n  ...bgGradient({\n    color: alpha(theme.palette.background.default, theme.palette.mode === 'light' ? 0.9 : 0.94),\n    imgUrl: '/assets/background/overlay_2.jpg',\n  }),\n  [theme.breakpoints.up('md')]: {\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100vh',\n    position: 'fixed',\n  },\n}));\n\nconst StyledDescription = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: theme.spacing(15, 0),\n  height: '100%',\n}));\n\nconst StyledGradientText = styled(m.h1)(({ theme }) => ({\n  ...textGradient(\n    `300deg, ${theme.palette.primary.main} 0%, ${theme.palette.warning.main} 25%, ${theme.palette.primary.main} 50%, ${theme.palette.warning.main} 75%, ${theme.palette.primary.main} 100%`\n  ),\n  backgroundSize: '400%',\n  fontFamily: \"'Barlow', sans-serif\",\n  fontSize: `${64 / 16}rem`,\n  textAlign: 'center',\n  lineHeight: 1,\n  padding: 0,\n  marginTop: 8,\n  marginBottom: 24,\n  letterSpacing: 8,\n  [theme.breakpoints.up('md')]: {\n    fontSize: `${96 / 16}rem`,\n  },\n}));\n\nconst StyledEllipseTop = styled('div')(({ theme }) => ({\n  position: 'absolute',\n  width: 480,\n  height: 480,\n  top: -80,\n  right: -80,\n  borderRadius: '50%',\n  filter: 'blur(100px)',\n  WebkitFilter: 'blur(100px)',\n  backgroundColor: alpha(theme.palette.primary.darker, 0.12),\n}));\n\nconst StyledEllipseBottom = styled('div')(({ theme }) => ({\n  position: 'absolute',\n  height: 400,\n  bottom: -200,\n  left: '10%',\n  right: '10%',\n  borderRadius: '50%',\n  filter: 'blur(100px)',\n  WebkitFilter: 'blur(100px)',\n  backgroundColor: alpha(theme.palette.primary.darker, 0.08),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeHero() {\n  const isDesktop = useResponsive('up', 'md');\n\n  // const { scrollYProgress } = useScroll();\n\n  // const [hide, setHide] = useState(false);\n\n  // useEffect(\n  //   () =>\n  //     scrollYProgress.onChange((scrollHeight) => {\n  //       if (scrollHeight > 0.8) {\n  //         setHide(true);\n  //       } else {\n  //         setHide(false);\n  //       }\n  //     }),\n  //   [scrollYProgress]\n  // );\n\n  // if (hide) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <StyledRoot>\n        <Container component={MotionContainer} sx={{ height: 1 }}>\n          <Grid container spacing={10} sx={{ height: 1 }}>\n            <Grid item xs={12} md={6} sx={{ height: 1 }}>\n              <Description />\n            </Grid>\n\n            {isDesktop && (\n              <Grid item xs={12} md={6}>\n                <Content />\n              </Grid>\n            )}\n          </Grid>\n        </Container>\n\n        <StyledEllipseTop />\n\n        <StyledEllipseBottom />\n      </StyledRoot>\n\n      <Box sx={{ height: { md: '100vh' } }} />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  return (\n    <StyledDescription>\n      <m.div variants={varFade().in}>\n        <Typography variant=\"h3\" sx={{ textAlign: 'center' }}>\n          Own Your Digital World\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().in}>\n        <StyledGradientText\n          animate={{ backgroundPosition: '200% center' }}\n          transition={{\n            repeatType: 'reverse',\n            ease: 'linear',\n            duration: 20,\n            repeat: Infinity,\n          }}\n        >\n          Laicos\n        </StyledGradientText>\n      </m.div>\n\n      <m.div variants={varFade().in}>\n        <Typography variant=\"body2\" sx={{ textAlign: 'center' }}>\n          Revolutionize Your Social Experience. Own Your Data, Control Your Content, and Access\n          Exclusive Features with Web3 Technology\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().in}>\n        <Stack spacing={1.5} direction={{ xs: 'column-reverse', sm: 'row' }} sx={{ my: 5 }}>\n          <Stack alignItems=\"center\" spacing={2}>\n            <Button\n              component={RouterLink}\n              to={PATH_DASHBOARD.root}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"contained\"\n              startIcon={<Iconify icon=\"eva:flash-fill\" width={24} />}\n              sx={{\n                bgcolor: 'text.primary',\n                color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n                '&:hover': {\n                  bgcolor: 'text.primary',\n                },\n              }}\n            >\n              Dapp (BETA)\n            </Button>\n\n            <Link\n              color=\"inherit\"\n              variant=\"caption\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://github.com/laicos-org\"\n              sx={{ textDecoration: 'underline', display: 'inline-flex', alignItems: 'center' }}\n            >\n              <Iconify icon=\"eva:external-link-fill\" width={16} sx={{ mr: 0.5 }} />\n              Laicos Github\n            </Link>\n          </Stack>\n\n          <Button\n            color=\"inherit\"\n            size=\"large\"\n            variant=\"outlined\"\n            startIcon={<Iconify icon=\"eva:external-link-fill\" width={24} />}\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"https://laicos.gitbook.io/laicos\"\n            sx={{ borderColor: 'text.primary' }}\n          >\n            Docs\n          </Button>\n        </Stack>\n      </m.div>\n    </StyledDescription>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === 'light';\n\n  const transition = {\n    repeatType: 'loop',\n    ease: 'linear',\n    duration: 60 * 4,\n    repeat: Infinity,\n  } as const;\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"flex-start\"\n      sx={{\n        height: 1,\n        overflow: 'hidden',\n        position: 'absolute',\n        mt: `${HEADER.H_MAIN_DESKTOP}px`,\n      }}\n    >\n      <Stack component={m.div} variants={varFade().in} sx={{ width: 344, position: 'relative' }}>\n        <Box\n          component={m.img}\n          animate={{ y: ['0%', '100%'] }}\n          transition={transition}\n          alt={`hero_${isLight ? 'light' : 'dark'}_1`}\n          src={`/assets/images/home/hero_${isLight ? 'light' : 'dark'}_1.png`}\n          sx={{ position: 'absolute' }}\n        />\n        <Box\n          component={m.img}\n          animate={{ y: ['-100%', '0%'] }}\n          transition={transition}\n          alt={`hero_${isLight ? 'light' : 'dark'}_1`}\n          src={`/assets/images/home/hero_${isLight ? 'light' : 'dark'}_1.png`}\n          sx={{ position: 'absolute' }}\n        />\n      </Stack>\n\n      <Stack\n        component={m.div}\n        variants={varFade().in}\n        sx={{ width: 720, position: 'relative', ml: -2 }}\n      >\n        <Box\n          component={m.img}\n          animate={{ y: ['100%', '0%'] }}\n          transition={transition}\n          alt={`hero_${isLight ? 'light' : 'dark'}_2`}\n          src={`/assets/images/home/hero_${isLight ? 'light' : 'dark'}_2.png`}\n          sx={{ position: 'absolute' }}\n        />\n        <Box\n          component={m.img}\n          animate={{ y: ['0%', '-100%'] }}\n          transition={transition}\n          alt={`hero_${isLight ? 'light' : 'dark'}_2`}\n          src={`/assets/images/home/hero_${isLight ? 'light' : 'dark'}_2.png`}\n          sx={{ position: 'absolute' }}\n        />\n      </Stack>\n    </Stack>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Card, Container, Typography, Stack } from '@mui/material';\n// components\nimport Image from '../../components/image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst CARDS = [\n  {\n    icon: ' /assets/icons/home/ic_make_brand.svg',\n    title: 'Branding',\n    description: 'Consistent design makes it easy to brand your own.',\n  },\n  {\n    icon: ' /assets/icons/home/ic_design.svg',\n    title: 'UI & UX Design',\n    description:\n      'The kit is built on the principles of the atomic design system. It helps you to create projects fastest and easily customized packages for your projects.',\n  },\n  {\n    icon: ' /assets/icons/home/ic_development.svg',\n    title: 'Development',\n    description: 'Easy to customize and extend, saving you time and money.',\n  },\n];\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  textAlign: 'center',\n  padding: theme.spacing(10, 5),\n  [theme.breakpoints.up('md')]: {\n    boxShadow: 'none',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeLaicos() {\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <Stack\n          spacing={3}\n          sx={{\n            textAlign: 'center',\n            mb: { xs: 5, md: 10 },\n          }}\n        >\n          <m.div variants={varFade().inUp}>\n            <Typography component=\"div\" variant=\"overline\" sx={{ color: 'text.disabled' }}>\n              Laicos\n            </Typography>\n          </m.div>\n\n          <m.div variants={varFade().inDown}>\n            <Typography variant=\"h2\">\n              What Laicos <br /> helps you?\n            </Typography>\n          </m.div>\n        </Stack>\n\n        <Box\n          gap={{ xs: 3, lg: 10 }}\n          display=\"grid\"\n          alignItems=\"center\"\n          gridTemplateColumns={{\n            xs: 'repeat(1, 1fr)',\n            md: 'repeat(3, 1fr)',\n          }}\n        >\n          {CARDS.map((card, index) => (\n            <m.div variants={varFade().inUp} key={card.title}>\n              <StyledCard\n                sx={{\n                  ...(index === 1 && {\n                    boxShadow: (theme) => ({\n                      md: `-40px 40px 80px ${\n                        theme.palette.mode === 'light'\n                          ? alpha(theme.palette.grey[500], 0.16)\n                          : alpha(theme.palette.common.black, 0.4)\n                      }`,\n                    }),\n                  }),\n                }}\n              >\n                <Image\n                  src={card.icon}\n                  alt={card.title}\n                  sx={{ mx: 'auto', width: 48, height: 48 }}\n                />\n\n                <Typography variant=\"h5\" sx={{ mt: 8, mb: 2 }}>\n                  {card.title}\n                </Typography>\n\n                <Typography sx={{ color: 'text.secondary' }}>{card.description}</Typography>\n              </StyledCard>\n            </m.div>\n          ))}\n        </Box>\n      </Container>\n    </StyledRoot>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport { Container, Typography, Stack, IconButton } from '@mui/material';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport SvgColor from '../../components/svg-color';\nimport Image from '../../components/image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  textAlign: 'center',\n  padding: theme.spacing(10, 0),\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center center',\n  backgroundImage: `url('/assets/background/overlay_4.jpg')`,\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(20, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeDarkMode() {\n  const { themeMode, onToggleMode } = useSettingsContext();\n\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <m.div variants={varFade().inUp}>\n          <Typography component=\"div\" variant=\"overline\" sx={{ color: 'primary.main' }}>\n            Easy switch between styles.\n          </Typography>\n        </m.div>\n\n        <m.div variants={varFade().inUp}>\n          <Stack spacing={2} direction=\"row\" alignItems=\"center\" display=\"inline-flex\">\n            <Typography variant=\"h2\" sx={{ my: 3, color: 'common.white' }}>\n              Dark mode\n            </Typography>\n\n            <IconButton color={themeMode === 'dark' ? 'warning' : 'default'} onClick={onToggleMode}>\n              <SvgColor\n                src={`/assets/icons/setting/ic_${themeMode === 'light' ? 'moon' : 'sun'}.svg`}\n              />\n            </IconButton>\n          </Stack>\n        </m.div>\n\n        <m.div variants={varFade().inUp}>\n          <Typography sx={{ color: 'grey.500' }}>\n            A dark theme that feels easier on the eyes.\n          </Typography>\n        </m.div>\n\n        <m.div variants={varFade().inUp}>\n          <Image\n            alt=\"darkmode\"\n            src=\"/assets/images/home/darkmode.jpg\"\n            sx={{\n              borderRadius: 2,\n              my: { xs: 5, md: 10 },\n              boxShadow: (theme) => `-40px 40px 80px ${alpha(theme.palette.common.black, 0.24)}`,\n            }}\n          />\n        </m.div>\n      </Container>\n    </StyledRoot>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, Grid, Stack } from '@mui/material';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// routes\nimport { PATH_ZONE_ON_STORE } from '../../routes/paths';\n// components\nimport Image from '../../components/image';\nimport Iconify from '../../components/iconify';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeLookingFor() {\n  const isDesktop = useResponsive('up', 'md');\n\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          spacing={{ xs: 5, md: 0 }}\n        >\n          <Grid item xs={12} md={4}>\n            <Description />\n          </Grid>\n\n          <Grid item xs={12} md={7}>\n            <Content />\n          </Grid>\n\n          {!isDesktop && (\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              {VisitButton}\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  const isDesktop = useResponsive('up', 'md');\n\n  return (\n    <Stack\n      sx={{\n        textAlign: {\n          xs: 'center',\n          md: 'left',\n        },\n      }}\n    >\n      <m.div variants={varFade().inDown}>\n        <Typography variant=\"overline\" component=\"div\" sx={{ color: 'text.disabled' }}>\n          Looking For a\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inDown}>\n        <Typography\n          variant=\"h2\"\n          sx={{\n            mt: 3,\n            mb: { md: 5 },\n          }}\n        >\n          Landing Page Template?\n        </Typography>\n      </m.div>\n\n      {isDesktop && <m.div variants={varFade().inDown}> {VisitButton} </m.div>}\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  return (\n    <Box component={m.div} variants={varFade().inUp}>\n      <Image disabledEffect alt=\"rocket\" src=\"/assets/images/home/zone_landing.png\" />\n    </Box>\n  );\n}\n\nconst VisitButton = (\n  <Button\n    color=\"inherit\"\n    size=\"large\"\n    variant=\"outlined\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    href={PATH_ZONE_ON_STORE}\n    endIcon={<Iconify icon=\"ic:round-arrow-right-alt\" />}\n  >\n    Visit Zone Landing Page\n  </Button>\n);\n","import { m } from 'framer-motion';\n// @mui\nimport { styled, useTheme, alpha } from '@mui/material/styles';\nimport { Box, Grid, Container, Typography, BoxProps, Button } from '@mui/material';\n// utils\nimport { filterStyles, textGradient, bgGradient } from '../../utils/cssStyles';\n// routes\nimport { PATH_FIGMA_PREVIEW } from '../../routes/paths';\n// components\nimport Iconify from '../../components/iconify';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  position: 'relative',\n  '&:before': {\n    height: 2,\n    bottom: -1,\n    zIndex: 11,\n    content: '\"\"',\n    width: '100%',\n    position: 'absolute',\n    backgroundColor: theme.palette.grey[900],\n  },\n}));\n\nconst StyledWrap = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  backgroundColor: alpha(theme.palette.grey[500], 0.08),\n}));\n\nconst StyledDescription = styled('div')(({ theme }) => ({\n  top: 0,\n  left: 0,\n  zIndex: 8,\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  position: 'absolute',\n  paddingTop: theme.spacing(10),\n  ...bgGradient({\n    startColor: `${theme.palette.background.default} 25%`,\n    endColor: alpha(theme.palette.background.default, 0),\n  }),\n  [theme.breakpoints.up('md')]: {\n    background: 'unset',\n    position: 'unset',\n    textAlign: 'left',\n    padding: theme.spacing(25, 0),\n  },\n}));\n\nconst StyledContent = styled(m.img)(({ theme }) => ({\n  minHeight: 560,\n  [theme.breakpoints.up('md')]: {\n    top: 1,\n    zIndex: 8,\n    minHeight: 'auto',\n    position: 'absolute',\n    boxShadow: `-40px 80px 80px ${\n      theme.palette.mode === 'light'\n        ? alpha(theme.palette.grey[500], 0.4)\n        : theme.palette.common.black\n    }`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeForDesigner() {\n  return (\n    <StyledRoot>\n      <StyledWrap>\n        <Container component={MotionViewport} sx={{ position: 'relative' }}>\n          <Grid container>\n            <Grid item md={6}>\n              <Description />\n            </Grid>\n\n            <Grid item md={6}>\n              <StyledContent src=\"/assets/images/home/for_designer.jpg\" variants={varFade().in} />\n            </Grid>\n          </Grid>\n        </Container>\n\n        <TriangleShape />\n\n        <TriangleShape anchor=\"bottom\" />\n      </StyledWrap>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  const theme = useTheme();\n\n  return (\n    <StyledDescription>\n      <m.div variants={varFade().inUp}>\n        <Typography component=\"div\" variant=\"overline\" sx={{ color: 'text.disabled' }}>\n          Professional Kit\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inUp}>\n        <Typography\n          variant=\"h2\"\n          sx={{\n            mt: 3,\n            mb: 5,\n            ...textGradient(\n              `300deg, ${theme.palette.primary.main} 0%, ${theme.palette.warning.main} 100%`\n            ),\n          }}\n        >\n          For Designer\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inUp}>\n        <Button\n          color=\"inherit\"\n          size=\"large\"\n          variant=\"outlined\"\n          endIcon={<Iconify icon=\"ic:round-arrow-right-alt\" />}\n          target=\"_blank\"\n          rel=\"noopener\"\n          href={PATH_FIGMA_PREVIEW}\n          sx={{\n            bgcolor: 'text.primary',\n            color: theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n            '&:hover': {\n              bgcolor: 'text.primary',\n            },\n          }}\n        >\n          Go to Figma Workspace\n        </Button>\n      </m.div>\n    </StyledDescription>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ninterface TriangleShapeProps extends BoxProps {\n  anchor?: 'top' | 'bottom';\n}\n\nfunction TriangleShape({ anchor = 'top', ...other }: TriangleShapeProps) {\n  const theme = useTheme();\n\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <Box\n      sx={{\n        top: 0,\n        left: 0,\n        width: 1,\n        position: 'absolute',\n        color: 'background.default',\n        zIndex: { xs: 0, md: 9 },\n        height: { xs: 40, md: 64 },\n        ...filterStyles(\n          `drop-shadow(320px 20px 80px ${\n            isLight ? alpha(theme.palette.grey[700], 0.4) : theme.palette.common.black\n          })`\n        ),\n        ...(anchor === 'bottom' && {\n          zIndex: 9,\n          bottom: 0,\n          top: 'unset',\n          color: 'grey.900',\n          transform: 'scale(-1)',\n          ...filterStyles('none'),\n        }),\n      }}\n      {...other}\n    >\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1440 64\" preserveAspectRatio=\"none\">\n        <path d=\"M1440 0H0L1440 64V0Z\" fill=\"currentColor\" />\n      </svg>\n    </Box>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Stack,\n  Radio,\n  Tooltip,\n  Container,\n  Typography,\n  RadioGroup,\n  CardActionArea,\n  FormControlLabel,\n} from '@mui/material';\n// components\nimport { useSettingsContext } from '../../components/settings';\nimport Image from '../../components/image';\nimport Iconify from '../../components/iconify';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeColorPresets() {\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport} sx={{ position: 'relative' }}>\n        <Description />\n\n        <m.div variants={varFade().inDown}>\n          <Options />\n        </m.div>\n\n        <Content />\n      </Container>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  return (\n    <Stack spacing={3} sx={{ textAlign: 'center' }}>\n      <m.div variants={varFade().inDown}>\n        <Typography component=\"div\" variant=\"overline\" sx={{ color: 'text.disabled' }}>\n          choose your style\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inDown}>\n        <Typography variant=\"h2\"> Color presets </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inDown}>\n        <Typography sx={{ color: 'text.secondary' }}>\n          Express your own style with just one click\n        </Typography>\n      </m.div>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  const { themeColorPresets: color } = useSettingsContext();\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Image disabledEffect alt=\"grid\" src=\"/assets/images/home/presets_grid.png\" />\n\n      <Box sx={{ position: 'absolute', top: 0 }}>\n        <m.div variants={varFade().inUp}>\n          <Image\n            disabledEffect\n            alt=\"screen\"\n            src={`/assets/images/home/presets_screen_${color}.png`}\n          />\n        </m.div>\n      </Box>\n\n      <Box sx={{ position: 'absolute', top: 0 }}>\n        <m.div variants={varFade().inDown}>\n          <m.div animate={{ y: [0, -15, 0] }} transition={{ duration: 8, repeat: Infinity }}>\n            <Image\n              disabledEffect\n              alt=\"sidebar\"\n              src={`/assets/images/home/presets_block_${color}.png`}\n            />\n          </m.div>\n        </m.div>\n      </Box>\n\n      <Box sx={{ position: 'absolute', top: 0 }}>\n        <m.div variants={varFade().inDown}>\n          <m.div animate={{ y: [-5, 10, -5] }} transition={{ duration: 8, repeat: Infinity }}>\n            <Image\n              disabledEffect\n              alt=\"sidebar\"\n              src={`/assets/images/home/presets_chart_${color}.png`}\n            />\n          </m.div>\n        </m.div>\n      </Box>\n\n      <Box sx={{ position: 'absolute', top: 0 }}>\n        <m.div variants={varFade().inDown}>\n          <m.div animate={{ y: [-25, 5, -25] }} transition={{ duration: 10, repeat: Infinity }}>\n            <Image\n              disabledEffect\n              alt=\"sidebar\"\n              src={`/assets/images/home/presets_sidebar_${color}.png`}\n            />\n          </m.div>\n        </m.div>\n      </Box>\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Options() {\n  const { themeColorPresets, onChangeColorPresets, presetsOption } = useSettingsContext();\n\n  return (\n    <RadioGroup\n      name=\"themeColorPresets\"\n      value={themeColorPresets}\n      onChange={onChangeColorPresets}\n      sx={{ my: 5 }}\n    >\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          width: 100,\n          height: 88,\n          mx: 'auto',\n          position: 'relative',\n        }}\n      >\n        {presetsOption.map((color, index) => {\n          const { name, value } = color;\n          const isSelected = themeColorPresets === name;\n\n          return (\n            <Tooltip key={name} title={name}>\n              <CardActionArea\n                sx={{\n                  width: 24,\n                  height: 24,\n                  borderRadius: '50%',\n                  position: 'absolute',\n                  color: 'common.white',\n                  ...(index === 0 && { bottom: 0 }),\n                  ...(index === 1 && { left: 19 }),\n                  ...(index === 2 && { right: 19 }),\n                  ...(index === 3 && { top: 0, left: 0 }),\n                  ...(index === 4 && { top: 0 }),\n                  ...(index === 5 && { top: 0, right: 0 }),\n                }}\n              >\n                <Box\n                  sx={{\n                    bgcolor: value,\n                    width: 1,\n                    height: 1,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderRadius: '50%',\n                  }}\n                >\n                  {isSelected && <Iconify icon=\"eva:color-picker-fill\" width={16} />}\n\n                  <FormControlLabel\n                    label=\"\"\n                    value={name}\n                    control={<Radio sx={{ display: 'none' }} />}\n                    sx={{\n                      top: 0,\n                      left: 0,\n                      margin: 0,\n                      width: 1,\n                      height: 1,\n                      position: 'absolute',\n                    }}\n                  />\n                </Box>\n              </CardActionArea>\n            </Tooltip>\n          );\n        })}\n      </Stack>\n    </RadioGroup>\n  );\n}\n","import { useState } from 'react';\nimport { m } from 'framer-motion';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Tab,\n  Tabs,\n  Stack,\n  Button,\n  Divider,\n  Container,\n  Typography,\n  StackProps,\n} from '@mui/material';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// routes\nimport { PATH_MINIMAL_ON_STORE } from '../../routes/paths';\n// _mock_\nimport { _homePlans } from '../../_mock/arrays';\n// components\nimport SvgColor from '../../components/svg-color';\nimport Iconify from '../../components/iconify';\nimport { varFade, MotionViewport } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.neutral,\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomePricingPlans() {\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <Description />\n        <Content />\n      </Container>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  return (\n    <Stack spacing={3} sx={{ mb: 10, textAlign: 'center' }}>\n      <m.div variants={varFade().inUp}>\n        <Typography component=\"div\" variant=\"overline\" sx={{ mb: 2, color: 'text.disabled' }}>\n          pricing plans\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inDown}>\n        <Typography variant=\"h2\">\n          The right plan for <br /> your business\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inDown}>\n        <Typography sx={{ color: 'text.secondary' }}>\n          Choose the perfect plan for your needs. Always flexible to grow\n        </Typography>\n      </m.div>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  const isDesktop = useResponsive('up', 'md');\n\n  const [currentTab, setCurrentTab] = useState('Standard');\n\n  const desktopList = (\n    <Box\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(3, 1fr)\"\n      sx={{ borderRadius: 2, border: (theme) => `dashed 1px ${theme.palette.divider}` }}\n    >\n      {_homePlans.map((plan) => (\n        <m.div key={plan.license} variants={varFade().in}>\n          <PlanCard key={plan.license} plan={plan} />\n        </m.div>\n      ))}\n    </Box>\n  );\n\n  const mobileList = (\n    <>\n      <Stack alignItems=\"center\" sx={{ mb: 5 }}>\n        <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>\n          {_homePlans.map((tab) => (\n            <Tab key={tab.license} value={tab.license} label={tab.license} />\n          ))}\n        </Tabs>\n      </Stack>\n\n      <Box\n        sx={{\n          borderRadius: 2,\n          border: (theme) => `dashed 1px ${theme.palette.divider}`,\n        }}\n      >\n        {_homePlans.map(\n          (tab) =>\n            tab.license === currentTab && (\n              <PlanCard\n                key={tab.license}\n                plan={tab}\n                sx={{ borderLeft: (theme) => `dashed 1px ${theme.palette.divider}` }}\n              />\n            )\n        )}\n      </Box>\n    </>\n  );\n\n  return (\n    <>\n      {isDesktop ? desktopList : mobileList}\n\n      <m.div variants={varFade().in}>\n        <Box\n          sx={{\n            textAlign: 'center',\n            mt: {\n              xs: 5,\n              md: 10,\n            },\n          }}\n        >\n          <m.div variants={varFade().inDown}>\n            <Typography variant=\"h4\">Still have questions?</Typography>\n          </m.div>\n\n          <m.div variants={varFade().inDown}>\n            <Typography sx={{ mt: 2, mb: 5, color: 'text.secondary' }}>\n              Please describe your case to receive the most accurate advice.\n            </Typography>\n          </m.div>\n\n          <m.div variants={varFade().inUp}>\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"contained\"\n              href=\"mailto:support@minimals.cc?subject=[Feedback] from Customer\"\n              sx={{\n                bgcolor: 'text.primary',\n                color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\n                '&:hover': {\n                  bgcolor: 'text.primary',\n                },\n              }}\n            >\n              Contact us\n            </Button>\n          </m.div>\n        </Box>\n      </m.div>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ninterface PlanCardProps extends StackProps {\n  plan: {\n    license: string;\n    commons: string[];\n    options: string[];\n    icons: string[];\n  };\n}\n\nfunction PlanCard({ plan, sx, ...other }: PlanCardProps) {\n  const { license, commons, options, icons } = plan;\n\n  const standard = license === 'Standard';\n\n  const plus = license === 'Standard Plus';\n\n  return (\n    <Stack\n      spacing={5}\n      sx={{\n        p: 5,\n        pt: 10,\n        ...(plus && {\n          borderLeft: (theme) => `dashed 1px ${theme.palette.divider}`,\n          borderRight: (theme) => `dashed 1px ${theme.palette.divider}`,\n          ...sx,\n        }),\n      }}\n      {...other}\n    >\n      <Stack spacing={2}>\n        <Typography variant=\"overline\" component=\"div\" sx={{ color: 'text.disabled' }}>\n          License\n        </Typography>\n\n        <Box sx={{ position: 'relative' }}>\n          <Typography variant=\"h4\">{license}</Typography>\n          <Box\n            sx={{\n              left: 0,\n              bottom: 4,\n              width: 40,\n              height: 8,\n              opacity: 0.48,\n              bgcolor: 'error.main',\n              position: 'absolute',\n              ...(standard && { bgcolor: 'primary.main' }),\n              ...(plus && { bgcolor: 'warning.main' }),\n            }}\n          />\n        </Box>\n      </Stack>\n\n      {standard ? (\n        <SvgColor src={icons[2]} sx={{ width: 24, height: 24 }} />\n      ) : (\n        <Stack direction=\"row\" spacing={2}>\n          {icons.map((icon) => (\n            <SvgColor key={icon} src={icon} sx={{ width: 24, height: 24 }} />\n          ))}\n        </Stack>\n      )}\n\n      <Stack spacing={2.5}>\n        {commons.map((option) => (\n          <Stack key={option} spacing={1} direction=\"row\" alignItems=\"center\">\n            <Iconify icon=\"eva:checkmark-fill\" width={16} />\n            <Typography variant=\"body2\">{option}</Typography>\n          </Stack>\n        ))}\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        {options.map((option, optionIndex) => {\n          const disabled =\n            (standard && optionIndex === 1) ||\n            (standard && optionIndex === 2) ||\n            (standard && optionIndex === 3) ||\n            (plus && optionIndex === 3);\n\n          return (\n            <Stack\n              spacing={1}\n              direction=\"row\"\n              alignItems=\"center\"\n              sx={{\n                ...(disabled && { color: 'text.disabled' }),\n              }}\n              key={option}\n            >\n              <Iconify icon={disabled ? 'eva:close-fill' : 'eva:checkmark-fill'} width={16} />\n              <Typography variant=\"body2\">{option}</Typography>\n            </Stack>\n          );\n        })}\n      </Stack>\n\n      <Stack alignItems=\"flex-end\">\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          href={PATH_MINIMAL_ON_STORE}\n          endIcon={<Iconify icon=\"eva:chevron-right-fill\" />}\n        >\n          Learn more\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n","import { m } from 'framer-motion';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport { Box, Container, Typography, Stack } from '@mui/material';\n// components\nimport Image from '../../components/image';\nimport { MotionViewport, varFade } from '../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(15, 0),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeCleanInterfaces() {\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <Description />\n        <Content />\n      </Container>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  return (\n    <Stack\n      spacing={3}\n      sx={{\n        maxWidth: 520,\n        mx: 'auto',\n        zIndex: { md: 99 },\n        position: { md: 'absolute' },\n        textAlign: { xs: 'center', md: 'left' },\n      }}\n    >\n      <m.div variants={varFade().inUp}>\n        <Typography component=\"div\" variant=\"overline\" sx={{ color: 'text.disabled' }}>\n          clean & clear\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inUp}>\n        <Typography\n          variant=\"h2\"\n          sx={{\n            textShadow: (theme) =>\n              theme.palette.mode === 'light'\n                ? 'unset'\n                : `4px 4px 16px ${alpha(theme.palette.grey[800], 0.48)}`,\n          }}\n        >\n          Beautiful, modern and clean user interfaces\n        </Typography>\n      </m.div>\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {[...Array(10)].map((_, index) => (\n        <Box\n          key={index}\n          component={m.div}\n          variants={varFade().inUp}\n          sx={{\n            top: 0,\n            left: 0,\n            position: 'absolute',\n            ...(index === 0 && { zIndex: 8 }),\n            ...(index === 9 && { position: 'relative', zIndex: 9 }),\n          }}\n        >\n          <Image\n            disabledEffect\n            alt={`clean-${index + 1}`}\n            src={`/assets/images/home/clean_${index + 1}.png`}\n          />\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport { m } from 'framer-motion';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Fab,\n  Tab,\n  Box,\n  Grid,\n  Tabs,\n  Chip,\n  Alert,\n  Stack,\n  Radio,\n  Paper,\n  Button,\n  Rating,\n  Slider,\n  Switch,\n  MenuItem,\n  Checkbox,\n  Container,\n  TextField,\n  Typography,\n  AlertTitle,\n  Pagination,\n  CardHeader,\n  IconButton,\n  ToggleButton,\n  CircularProgress,\n  FormControlLabel,\n  ToggleButtonGroup,\n} from '@mui/material';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// utils\nimport { bgGradient } from '../../utils/cssStyles';\n// routes\nimport { PATH_PAGE } from '../../routes/paths';\n// _mock\nimport _mock from '../../_mock';\n// components\nimport Label from '../../components/label';\nimport Image from '../../components/image';\nimport Iconify from '../../components/iconify';\nimport Scrollbar from '../../components/scrollbar';\nimport MenuPopover from '../../components/menu-popover';\nimport BadgeStatus from '../../components/badge-status';\nimport { MotionViewport, varFade } from '../../components/animate';\nimport { CustomAvatar, CustomAvatarGroup } from '../../components/custom-avatar';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(10, 0),\n  [theme.breakpoints.up('md')]: {\n    paddingTop: theme.spacing(15),\n    paddingBottom: theme.spacing(20),\n  },\n}));\n\nconst StyledContent = styled('div')(({ theme }) => ({\n  ...bgGradient({\n    color: alpha(theme.palette.background.default, theme.palette.mode === 'light' ? 0.9 : 0.98),\n    imgUrl: '/assets/background/overlay_3.jpg',\n  }),\n  padding: theme.spacing(1.5, 0),\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(2, 0),\n  },\n  [theme.breakpoints.up('md')]: {\n    padding: theme.spacing(2.5),\n  },\n}));\n\nconst StyledDescription = styled('div')(({ theme }) => ({\n  textAlign: 'center',\n  [theme.breakpoints.up('md')]: {\n    textAlign: 'left',\n    paddingLeft: theme.spacing(5),\n    paddingTop: theme.spacing(15),\n  },\n}));\n\nconst StyledRow = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': {\n    margin: theme.spacing(1.5),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(2),\n    },\n    [theme.breakpoints.up('lg')]: {\n      margin: theme.spacing(2.5),\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function HomeHugePackElements() {\n  const isDesktop = useResponsive('up', 'md');\n\n  return (\n    <StyledRoot>\n      <Container component={MotionViewport}>\n        <Grid direction={{ xs: 'column', md: 'row-reverse' }} container spacing={5}>\n          <Grid item xs={12} md={5}>\n            <Description />\n          </Grid>\n\n          <Grid item xs={12} md={7}>\n            <Content />\n          </Grid>\n\n          {!isDesktop && (\n            <Grid item xs={12} sx={{ textAlign: 'center' }}>\n              {ViewAllButton}\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </StyledRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Description() {\n  const isDesktop = useResponsive('up', 'md');\n\n  return (\n    <StyledDescription>\n      <m.div variants={varFade().inUp}>\n        <Typography component=\"div\" variant=\"overline\" sx={{ color: 'text.disabled' }}>\n          Interface Starter Kit\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inUp}>\n        <Typography variant=\"h2\" sx={{ my: 3 }}>\n          Huge pack <br />\n          of elements\n        </Typography>\n      </m.div>\n\n      <m.div variants={varFade().inUp}>\n        <Typography\n          sx={{\n            mb: 5,\n            color: 'text.secondary',\n          }}\n        >\n          We collected most popular elements. Menu, sliders, buttons, inputs etc. are all here. Just\n          dive in!\n        </Typography>\n      </m.div>\n\n      {isDesktop && ViewAllButton}\n    </StyledDescription>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Content() {\n  const isMd = useResponsive('up', 'md');\n\n  const isLg = useResponsive('up', 'lg');\n\n  const [slider, setSlider] = useState<number>(24);\n\n  const [select, setSelect] = useState('Option 1');\n\n  const [alignment, setAlignment] = useState('left');\n\n  const [rating, setRating] = useState<number | null>(2);\n\n  const [currentTab, setCurrentTab] = useState('Angular');\n\n  const [openPopover, setOpenPopover] = useState<HTMLElement | null>(null);\n\n  const handleOpenPopover = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenPopover(event.currentTarget);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(null);\n  };\n\n  return (\n    <StyledContent>\n      {/* Row 1 */}\n      <StyledRow>\n        <m.div variants={varFade().in}>\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"ic:round-add-shopping-cart\" />}>\n            Add To Cart\n          </Button>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Button variant=\"soft\" startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}>\n            Upload\n          </Button>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Fab color=\"info\" size=\"medium\">\n            <Iconify icon=\"eva:search-fill\" />\n          </Fab>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <CircularProgress color=\"error\" />\n        </m.div>\n      </StyledRow>\n\n      {/* Row 2 */}\n      <StyledRow>\n        <m.div variants={varFade().in}>\n          <Tabs\n            value={currentTab}\n            onChange={(event, newValue) => setCurrentTab(newValue)}\n            sx={{ borderBottom: (theme) => `solid 1px ${theme.palette.divider}` }}\n          >\n            {['Angular', 'React', 'Vue'].map((tab) => (\n              <Tab\n                key={tab}\n                value={tab}\n                label={tab}\n                sx={{\n                  '&:not(:last-of-type)': { mr: 3 },\n                }}\n              />\n            ))}\n          </Tabs>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <ToggleButtonGroup\n            size=\"small\"\n            color=\"primary\"\n            value={alignment}\n            exclusive\n            onChange={(event: React.MouseEvent<HTMLElement>, newAlignment: string | null) => {\n              if (newAlignment !== null) {\n                setAlignment(newAlignment);\n              }\n            }}\n            aria-label=\"text alignment\"\n          >\n            {['left', 'center', 'right'].map((align) => (\n              <ToggleButton key={align} value={align} aria-label={`${align} aligned`}>\n                <Iconify icon={`carbon:align-horizontal-${align}`} />\n              </ToggleButton>\n            ))}\n          </ToggleButtonGroup>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Chip\n            color=\"warning\"\n            onDelete={() => {}}\n            avatar={<CustomAvatar src={_mock.image.avatar(2)} />}\n            label=\"Chip\"\n          />\n        </m.div>\n      </StyledRow>\n\n      {/* Row 3 */}\n      <StyledRow>\n        <m.div variants={varFade().in}>\n          <CustomAvatar\n            src={_mock.image.avatar(19)}\n            BadgeProps={{\n              badgeContent: <BadgeStatus status=\"online\" />,\n            }}\n          />\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <CustomAvatarGroup>\n            {[...Array(8)].map((_, index) => (\n              <CustomAvatar key={index} src={_mock.image.avatar(index)} />\n            ))}\n          </CustomAvatarGroup>\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Rating\n            value={rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Label variant=\"filled\" color=\"error\" startIcon={<Iconify icon=\"eva:email-fill\" />}>\n            Label\n          </Label>\n        </m.div>\n      </StyledRow>\n\n      {/* Row 4 */}\n      <StyledRow\n        sx={{\n          flexWrap: { lg: 'nowrap' },\n        }}\n      >\n        <m.div variants={varFade().in}>\n          <Slider\n            valueLabelDisplay=\"on\"\n            value={slider}\n            onChange={(event: Event, newValue: number | number[]) => {\n              setSlider(newValue as number);\n            }}\n            sx={{ maxWidth: 220 }}\n          />\n        </m.div>\n\n        <m.div variants={varFade().in}>\n          <Alert severity=\"success\" onClose={() => {}}>\n            <AlertTitle>Success</AlertTitle>\n            This is a success alert — <strong>check it out!</strong>\n          </Alert>\n        </m.div>\n      </StyledRow>\n\n      {/* Row 5 */}\n      {isMd && (\n        <StyledRow>\n          <m.div variants={varFade().in}>\n            <Pagination count={10} />\n          </m.div>\n\n          <m.div variants={varFade().in}>\n            <Button\n              color=\"info\"\n              variant=\"contained\"\n              onClick={handleOpenPopover}\n              startIcon={<Iconify icon=\"eva:menu-fill\" />}\n            >\n              Menu\n            </Button>\n          </m.div>\n\n          <MenuPopover open={openPopover} onClose={handleClosePopover} sx={{ width: 160 }}>\n            <Scrollbar sx={{ maxHeight: 160 }}>\n              {[...Array(8)].map((_, index) => (\n                <MenuItem key={index} onClick={handleClosePopover}>\n                  Item {index + 1}\n                </MenuItem>\n              ))}\n            </Scrollbar>\n          </MenuPopover>\n        </StyledRow>\n      )}\n\n      {/* Row 6 */}\n      {isMd && (\n        <StyledRow>\n          <m.div variants={varFade().in}>\n            <FormControlLabel control={<Switch defaultChecked />} label=\"Label\" />\n          </m.div>\n\n          <m.div variants={varFade().in}>\n            <FormControlLabel\n              control={<Radio color=\"error\" defaultChecked />}\n              label=\"Radio Button\"\n            />\n          </m.div>\n\n          <m.div variants={varFade().in}>\n            <FormControlLabel control={<Checkbox color=\"info\" defaultChecked />} label=\"Checkbox\" />\n          </m.div>\n\n          <m.div variants={varFade().in}>\n            <FormControlLabel\n              control={<Checkbox color=\"warning\" indeterminate />}\n              label=\"Checkbox\"\n            />\n          </m.div>\n        </StyledRow>\n      )}\n\n      {/* Row 7 */}\n      {isLg && (\n        <StyledRow sx={{ flexWrap: 'nowrap' }}>\n          <m.div variants={varFade().in}>{cardPost}</m.div>\n\n          <Stack spacing={3} sx={{ width: 1 }}>\n            <m.div variants={varFade().in}>\n              <TextField fullWidth label=\"Text Field\" value=\"Value\" />\n            </m.div>\n\n            <m.div variants={varFade().in}>\n              <TextField\n                select\n                fullWidth\n                label=\"Select\"\n                value={select}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setSelect(event.target.value);\n                }}\n              >\n                {['Option 1', 'Option 2', 'Option 3', 'Option 4'].map((option) => (\n                  <MenuItem\n                    key={option}\n                    value={option}\n                    sx={{\n                      mx: 1,\n                      borderRadius: 0.75,\n                      typography: 'body2',\n                      textTransform: 'capitalize',\n                    }}\n                  >\n                    {option}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </m.div>\n\n            <m.div variants={varFade().in}>\n              <TextField fullWidth multiline rows={3} label=\"Textarea\" />\n            </m.div>\n          </Stack>\n        </StyledRow>\n      )}\n    </StyledContent>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst ViewAllButton = (\n  <m.div variants={varFade().inUp}>\n    <Button\n      size=\"large\"\n      color=\"inherit\"\n      variant=\"outlined\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={PATH_PAGE.components}\n      endIcon={<Iconify icon=\"ic:round-arrow-right-alt\" />}\n    >\n      View All Components\n    </Button>\n  </m.div>\n);\n\n// ----------------------------------------------------------------------\n\nconst cardPost = (\n  <Paper\n    sx={{\n      width: 320,\n      borderRadius: 2,\n      boxShadow: (theme) => theme.customShadows.z24,\n    }}\n  >\n    <CardHeader\n      title=\"Jayvion Simon\"\n      subheader=\"California, United States\"\n      avatar={\n        <CustomAvatar\n          src={_mock.image.avatar(0)}\n          BadgeProps={{\n            badgeContent: <BadgeStatus status=\"online\" />,\n          }}\n          sx={{ width: 48, height: 48 }}\n        />\n      }\n      titleTypographyProps={{ typography: 'subtitle2', sx: { mb: 0.25 } }}\n      subheaderTypographyProps={{ typography: 'caption' }}\n      sx={{ p: 2 }}\n    />\n    <Image alt=\"cover\" src={_mock.image.cover(12)} ratio=\"16/9\" />\n\n    <Typography variant=\"body2\" sx={{ color: 'text.secondary', pt: 2, px: 2 }}>\n      Phasellus dolor. Fusce egestas elit eget lorem. Quisque id odio.\n    </Typography>\n\n    <Stack direction=\"row\" sx={{ px: 2, py: 1 }}>\n      <Checkbox\n        defaultChecked\n        color=\"error\"\n        size=\"small\"\n        icon={<Iconify icon=\"eva:heart-fill\" />}\n        checkedIcon={<Iconify icon=\"eva:heart-fill\" />}\n      />\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      <IconButton>\n        <Iconify icon=\"eva:share-outline\" />\n      </IconButton>\n\n      <IconButton>\n        <Iconify icon=\"eva:message-circle-fill\" />\n      </IconButton>\n    </Stack>\n  </Paper>\n);\n","import { Helmet } from 'react-helmet-async';\nimport { m, useScroll, useSpring } from 'framer-motion';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n// sections\nimport {\n  HomeHero,\n  HomeLaicos,\n  HomeDarkMode,\n  HomeLookingFor,\n  HomeForDesigner,\n  HomeColorPresets,\n  HomePricingPlans,\n  HomeAdvertisement,\n  HomeCleanInterfaces,\n  HomeHugePackElements,\n} from '../sections/home';\n\n// ----------------------------------------------------------------------\n\nexport default function HomePage() {\n  // const theme = useTheme();\n\n  // const { scrollYProgress } = useScroll();\n\n  // const scaleX = useSpring(scrollYProgress, {\n  //   stiffness: 100,\n  //   damping: 30,\n  //   restDelta: 0.001,\n  // });\n\n  // const progress = (\n  //   <m.div\n  //     style={{\n  //       top: 0,\n  //       left: 0,\n  //       right: 0,\n  //       height: 3,\n  //       zIndex: 1999,\n  //       position: 'fixed',\n  //       transformOrigin: '0%',\n  //       backgroundColor: theme.palette.primary.main,\n  //       scaleX,\n  //     }}\n  //   />\n  // );\n\n  return (\n    <>\n      <Helmet>\n        <title> The starting point for your NFT project | Laicos</title>\n      </Helmet>\n\n      {/* {progress} */}\n\n      <HomeHero />\n\n      {/* <Box\n        sx={{\n          overflow: 'hidden',\n          position: 'relative',\n          bgcolor: 'background.default',\n        }}\n      > */}\n      {/* <HomeLaicos /> */}\n      {/* \n        <HomeHugePackElements />\n\n        <HomeForDesigner />\n\n        <HomeDarkMode />\n\n        <HomeColorPresets />\n\n        <HomeCleanInterfaces />\n\n        <HomePricingPlans />\n\n        <HomeLookingFor />\n\n        <HomeAdvertisement /> */}\n      {/* </Box> */}\n    </>\n  );\n}\n"],"names":["StyledBadgeStatus","styled","theme","ownerState","status","size","width","height","display","borderRadius","alignItems","justifyContent","content","backgroundColor","palette","common","white","warning","main","transform","error","success","text","disabled","info","BadgeStatus","sx","useTheme","StyledRoot","position","bgGradient","color","alpha","background","default","mode","imgUrl","breakpoints","up","top","left","StyledDescription","maxWidth","margin","flexDirection","padding","spacing","StyledGradientText","m","textGradient","primary","backgroundSize","fontFamily","fontSize","textAlign","lineHeight","marginTop","marginBottom","letterSpacing","StyledEllipseTop","right","filter","WebkitFilter","darker","StyledEllipseBottom","bottom","HomeHero","isDesktop","useResponsive","component","MotionContainer","container","item","xs","md","Description","Content","variants","varFade","in","variant","animate","backgroundPosition","transition","repeatType","ease","duration","repeat","Infinity","direction","sm","my","RouterLink","to","PATH_DASHBOARD","startIcon","icon","bgcolor","Link","target","rel","href","textDecoration","mr","borderColor","isLight","overflow","mt","HEADER","y","alt","src","ml","Card","boxShadow","backgroundRepeat","backgroundImage","PATH_ZONE_ON_STORE","zIndex","grey","paddingTop","startColor","endColor","minHeight","black","neutral","paddingBottom","Number","shape","paddingLeft","flexWrap","inUp","PATH_PAGE","Paper","CardHeader","_mock","HomePage"],"sourceRoot":""}